{"version":3,"sources":["constants/Constants.js","app/templates/edit/Preview/1.png","app/templates/edit/Preview/2.png","app/templates/edit/Preview/3.png","app/utils/dialogs/QrDialog.js","app/participants/Participants.js","services/UserService.js","app/login/Login.js","app/utils/Spinner.js","app/utils/dialogs/InputDialog.js","app/utils/dialogs/ConfirmationDialog.js","app/templates/list/Templates.js","app/templates/list/TemplateTableHelper.js","app/certificates/list/Certificates.js","app/certificates/list/CertificateTableHelper.js","services/TemplateService.js","services/ParticipantService.js","app/participants/ParticipantsTableHelper.js","services/CertificateService.js","app/administrative/list/Delegates.js","services/DelegateService.js","app/administrative/list/DelegatesTableHelper.js","app/main/Main.js","app/utils/DataRenderer.js","app/utils/dialogs/TemplateFieldAddDialog.js","app/templates/edit/Template.js","app/certificates/edit/Certificate.js","app/main/App.js","serviceWorker.js","index.js","constants/Messages.js"],"names":["API","process","module","exports","VERSION","API_ROUTES","LOGIN","TEMPLATES","GET_ALL","GET_QR","id","code","REQUEST","GET","CREATE","EDIT","DELETE","PARTICIPANTS","POST_NEW","GET_GLOBAL","GET_NEW","did","GET_DIDS","CERTIFICATES","EMMIT","DELEGATE","GET_NAME","CHANGE_NAME","ROUTES","DELEGATES","QR_REQUEST","LIST","EDIT_TEMPLATE","EDIT_CERT","CERT_FIELD_MANDATORY","DID","NAME","FIRST_NAME","LAST_NAME","EXPIRATION_DATE","ICONS","ADD_BUTTON","TABLE","PAGE_SIZE","MIN_ROWS","PREVIEW_ELEMS_LENGTH","1","2","3","4","OK","MISSING","BOOLEAN","TRUE","FALSE","REQUIRED","NOT_REQUIRED","ADD_OPTION","REMOVE_OPTION","TYPING_TIMEOUT","CATEGORIES","TYPES","TEXT","PARAGRAPH","DATE","NUMBER","CHECKBOX","TYPE_MAPPING","Email","Telefono","Dni","Nacionalidad","Nombres","NOMBRE","Apellidos","APELLIDO","Direccion","Calle","Piso","Departamento","Pais","SHARED_TYPES","DATA_TYPES","CERT","OTHERS","PARTICIPANT","MANDATORY_DATA","FULL_NAME","PARTICIPANT_FIRST_NAME","PARTICIPANT_LAST_NAME","ERR","INVALID_DID","CSV_REQUIRED_VALUE_INVALID","field","err","message","CSV_REQUIRED_VALUE_MISSING","MISSING_FIELD","CSV_MISSING_FIELDS","EXP_DATE_INVALID","PARTICIPANT_SELECT","SPLIT","TEMPLATE_SELECT","REQUEST_TYPES","mail","tel","personal","address","interval","UserService","user","pass","cb","errCb","data","method","headers","body","JSON","stringify","name","password","fetch","Constants","then","json","status","token","catch","Login","props","onLogin","event","preventDefault","self","login","state","a","Cookie","set","setState","error","console","log","updateName","target","value","updatePass","get","to","className","Messages","WELCOME","onSubmit","this","type","onChange","autoComplete","BUTTONS","ENTER","Component","withRouter","Spinner","loading","css","size","InputDialog","cleanData","fields","Object","keys","open","isOpen","close","updateField","render","title","onAccept","fieldNames","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","length","map","key","TextField","autoFocus","margin","label","fullWidth","DialogActions","Button","onClick","color","DIALOG","CANCEL","disabled","values","indexOf","forEach","fieldName","onRef","undefined","ConfirmationDialog","confirm","hideClose","Templates","openDeleteDialog","deleteDialog","renderCreateDialog","ref","createDialog","CREATE_TEMPLATE_TITLE","onCreate","renderDeleteDialog","DELETE_TEMPLATE_TITLE","DELETE_CONFIRMATION","onDelete","renderSectionButtons","selected","icon","CREATE_TEMPLATE","renderTable","templates","columns","sortable","previousText","PREV","nextText","NEXT","defaultPageSize","minRows","TemplateTableHelpers","template","onEdit","isLoading","_id","actions","Header","TEMPLATE","accessor","Certificates","onCertificateEdit","history","push","onCertificateCreate","openRevokeDialog","revokeDialog","DELETE_CERT_TITLE","renderRevocationDialog","REVOKE_CERT_TITLE","REVOKE_CONFIRMATION","REVOKE","CREATE_CERT","certificates","renderButtons","onMultiEmmit","EMMIT_SELECTED","CertificateTableHelper","cert","selectedCertificates","onCertificateSelectToggle","onCertificateEmmit","onCertificateDelete","onCertificateRevoke","emmited","emmitedOn","certName","createdOn","split","firstName","lastName","select","Checkbox","checked","_","VIEW","selectedCerts","allSelectedCerts","onCertificateSelectAllToggle","onEmmitedFilterChange","onTemplateFilterChange","onFirstNameFilterChange","onLastNameFilterChange","certNames","Set","Select","MenuItem","EMISSION_DATE","EMISSION_DATE2","ACTIONS","SELECT","filter","val","TemplateService","templateData","mandatory","defaultValue","required","options","participant","others","url","preview","previewData","category","previewType","dids","certs","ParticipantService","templateId","partData","QRCode","require","QrDialog","generateQrCode","qr","Math","random","toString","slice","selectedTemplate","getQrPetition","requestCode","setTimeout","canvas","document","getElementById","toCanvas","qrSet","getParticipant","part","renderQrLoadedDialog","renderTemplateSelector","renderParticipantSelector","renderQrPetition","renderQrButtons","qrLoadedDialog","QR","LOADED_BY_QR","CLOSE","participants","TITLE","multiple","displayEmpty","parts","renderValue","sel","join","elem","ListItemText","primary","TEMPLATE_SELECT_MESSAGE","QR_MESSAGE","Autocomplete","getOptionLabel","option","renderInput","params","variant","placeholder","onDataReceived","GENERATE","setInterval","getNew","requestSent","onParticipantsReload","clearInterval","QR_PD","Participants","canSendRequest","partIds","selectedParticipants","partId","sendRequests","requests","globalRequestCode","reqSentDialog","sendRequest","createSampleCsv","element","createElement","file","Blob","href","URL","createObjectURL","download","appendChild","click","LoadDidsFromCsv","files","reader","FileReader","onload","e","result","index","addDids","readAsText","createNew","local","acum","onReload","onBack","qrDialog","componentDidMount","renderQrDialog","LOAD_BY_QR","renderRequestSentDialog","REQUEST_SENT","SAMPLE_PART_FROM_CSV","handleFiles","fileTypes","LOAD_DIDS_FROM_CSV","QR_LOAD","getAllDids","ParticipantsTableHelper","onParticipantSelectToggle","allSelectedParts","onParticipantSelectAllToggle","HAS_TEL","HAS_MAIL","HAS_PERSONAL","HAS_PERSONAL2","HAS_ADDRESS","CertificateService","certData","array","microCredsData","microCredentials","names","Delegates","CREATE_DELEGATE_TITLE","DELETE_DELEGATE_TITLE","CREATE_DELEGATE","delegates","DelegateService","DelegatesTableHelpers","delegate","Main","allSelectedParticipants","updateSelectedParticipantsState","selectedParts","types","partTypes","getParticipantData","participantColumns","getParticipantColumns","getGlobal","certificatesSection","selectedCertId","onCertificateDeleteDialogOpen","find","t","delete","certId","updateSelectedCertsState","allSelected","certificate","getCertificatesData","certColumns","getCertColumns","filteredCertificates","onCertificateMultiEmmit","toEmmit","errors","promises","Promise","resolve","reject","emmit","all","onTemplateCreate","create","TemplateTableHelper","getTemplateData","onTemplateEdit","onTemplateDeleteDialogOpen","templateColumns","getTemplateColumns","templatesSection","selectedTemplateId","onTemplateDelete","updateFiltererCertificates","lastNameFilter","templateFilter","emmitedFilter","firstNameFilter","toLowerCase","includes","onDelegateDeleteDialogOpen","delegatesSection","selectedDelegateDid","onDelegateCreate","DelegatesTableHelper","getDelegatesData","delegateColumns","getDelegatesColumns","onDelegateDelete","onIssuerRename","changeIssuerName","issuerName","onLogout","renderRenameDialog","renameDialog","ISSUER_RENAME_TITLE","toggleShowMenu","showMenu","renderActions","MENU","RENAME_ISSUER","EXIT","tabIndex","splitPath","location","pathname","getAll","getIssuerName","selectedIndex","onSelect","TO_TEMPLATES","TO_CERTIFICATES","TO_QR","onRename","DataRenderer","renderData","dataElem","allowEdit","blockMandatory","opt","Date","date","dateFormat","replace","renderRequired","renderDelete","TemplateFieldAddDialog","dataType","createField","isCheckbox","renderDialogName","renderDialogCheckbox","renderDialogTypes","renderDialogRequired","FIELD","assign","InputLabel","OPTION","op","splice","Template","templateFieldAddDialog","toggleRequired","setDefaultValue","onPreviewFieldsSelected","radioValue","deleteField","prevData","onSave","save","renderDialog","renderTemplateCategory","categories","DATA","renderTemplateType","templateElements","concat","elemData","elementData","missing","PREVIEW","RadioGroup","aria-label","FormControlLabel","control","Radio","src","alt","renderTemplate","renderSection","PART","OTHER","SAVE","BACK","typingTimeout","typing","Certificate","getTemplates","getCert","getTemplate","action","getParticipants","certFromTemplate","certDataFromTemplate","onParticipantsAdd","addParticipant","getSample","substring","csv","firstLine","othersData","validateDID","match","loadCertFromCsv","assignElement","dateParts","isNaN","validateValueMatchesType","shift","parse","certDataKeys","otherDataKeys","partDataKeys","certDataCount","otherDataCount","partDataCount","removeParticipant","templateSelected","len","pos","newPart","participantSelected","addMicroCredential","removeMicroCredential","microcredFieldsSelected","microcredNameChanged","splitChanged","updateErrorDelayed","saveDisabled","flat","renderSplit","allData","MICRO_CRED_NAME","MICRO_CRED_FIELDS","microCred","picked","i","microCredName","key2","ADD_MICRO_CRED_LABEL","ADD_MICRO_CRED","REMOVE_MICRO_CRED_LABEL","hidden","REMOVE_MICRO_CRED","renderCert","viewing","REMOVE_PARTICIPANTS","ADD_PARTICIPANTS","LOAD_PARTICIPANTS","SAMPLE_CERT_FROM_CSV","LOAD_CERT_FROM_CSV","position","partToUpdate","dataToUpdate","mappedName","elemName","didDataToUpdate","App","exact","path","component","Boolean","window","hostname","config","ReactDOM","navigator","serviceWorker","ready","registration","unregister","DIDS_TITLE","SEND","LOAD_SUCCESS","DID_SELECT","CERTIFICATE_SELECT","TEMPLATE_PART_SELECT_MESSAGE","QR_MESSAGE_CERT"],"mappings":"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","file":"static/js/main.6fed498f.chunk.js","sourcesContent":["const API = process.env.REACT_APP_API_URL;\nconst VERSION = process.env.REACT_APP_VERSION;\n\nmodule.exports = {\n\tVERSION,\n\tAPI_ROUTES: {\n\t\tLOGIN: API + \"/user/login\",\n\t\tTEMPLATES: {\n\t\t\tGET_ALL: API + \"/template/all\",\n\t\t\tGET_QR: (id, code) => {\n\t\t\t\treturn API + \"/template/\" + id + \"/qr/\" + code;\n\t\t\t},\n\t\t\tREQUEST: code => {\n\t\t\t\treturn API + \"/template/request/\" + code;\n\t\t\t},\n\t\t\tGET: id => {\n\t\t\t\treturn API + \"/template/\" + id;\n\t\t\t},\n\t\t\tCREATE: API + \"/template/\",\n\t\t\tEDIT: id => {\n\t\t\t\treturn API + \"/template/\" + id;\n\t\t\t},\n\t\t\tDELETE: id => {\n\t\t\t\treturn API + \"/template/\" + id;\n\t\t\t}\n\t\t},\n\t\tPARTICIPANTS: {\n\t\t\tPOST_NEW: API + \"/participant/new/\",\n\t\t\tGET_GLOBAL: API + \"/participant/global/\",\n\t\t\tGET_ALL: id => {\n\t\t\t\treturn API + \"/participant/all/\" + id;\n\t\t\t},\n\t\t\tGET_NEW: id => {\n\t\t\t\treturn API + \"/participant/new/\" + id;\n\t\t\t},\n\t\t\tGET: did => {\n\t\t\t\treturn API + \"/participant/\" + did;\n\t\t\t},\n\t\t\tGET_DIDS: API + \"/participant/dids\"\n\t\t},\n\t\tCERTIFICATES: {\n\t\t\tCREATE: API + \"/cert\",\n\t\t\tEDIT: id => {\n\t\t\t\treturn API + \"/cert/\" + id;\n\t\t\t},\n\t\t\tEMMIT: id => {\n\t\t\t\treturn API + \"/cert/\" + id + \"/emmit\";\n\t\t\t},\n\t\t\tGET_ALL: API + \"/cert/all\",\n\t\t\tGET: id => {\n\t\t\t\treturn API + \"/cert/\" + id;\n\t\t\t},\n\t\t\tDELETE: id => {\n\t\t\t\treturn API + \"/cert/\" + id;\n\t\t\t}\n\t\t},\n\t\tDELEGATE: {\n\t\t\tCREATE: API + \"/delegate\",\n\t\t\tDELETE: API + \"/delegate\",\n\t\t\tGET_ALL: API + \"/delegate/all\",\n\t\t\tGET_NAME: API + \"/delegate/name\",\n\t\t\tCHANGE_NAME: API + \"/delegate/name\"\n\t\t}\n\t},\n\tROUTES: {\n\t\tLOGIN: \"/login\",\n\t\tDELEGATES: \"/admin\",\n\t\tQR_REQUEST: \"/qr_request\",\n\t\tLIST: \"/list\",\n\t\tTEMPLATES: \"/templates\",\n\t\tEDIT_TEMPLATE: \"/templates/edit/\",\n\t\tCERTIFICATES: \"/certificates\",\n\t\tEDIT_CERT: \"/certificates/edit/\"\n\t},\n\n\tCERT_FIELD_MANDATORY: {\n\t\tDID: \"DID\",\n\t\tNAME: \"CERTIFICADO O CURSO\",\n\t\tFIRST_NAME: \"NOMBRE\",\n\t\tLAST_NAME: \"APELLIDO\",\n\t\tEXPIRATION_DATE: \"EXPIRATION DATE\"\n\t},\n\n\tDELEGATES: {\n\t\tICONS: {\n\t\t\tADD_BUTTON: \"add_box\"\n\t\t},\n\t\tTABLE: {\n\t\t\tPAGE_SIZE: 10,\n\t\t\tMIN_ROWS: 3\n\t\t}\n\t},\n\n\tTEMPLATES: {\n\t\tPREVIEW_ELEMS_LENGTH: {\n\t\t\t1: 2,\n\t\t\t2: 4,\n\t\t\t3: 6,\n\t\t\t4: 6\n\t\t},\n\n\t\tICONS: {\n\t\t\tADD_BUTTON: \"add_box\",\n\t\t\tOK: \"check_circle_outline\",\n\t\t\tMISSING: \"highlight_off\"\n\t\t},\n\t\tTABLE: {\n\t\t\tPAGE_SIZE: 10,\n\t\t\tMIN_ROWS: 3\n\t\t},\n\t\tEDIT: {\n\t\t\tBOOLEAN: {\n\t\t\t\tTRUE: \"Si\",\n\t\t\t\tFALSE: \"No\"\n\t\t\t},\n\t\t\tICONS: {\n\t\t\t\tREQUIRED: \"check_circle_outline\",\n\t\t\t\tNOT_REQUIRED: \"radio_button_unchecked\",\n\t\t\t\tADD_OPTION: \"add_circle_outline\",\n\t\t\t\tREMOVE_OPTION: \"clear\",\n\t\t\t\tDELETE: \"cancel_presentation\"\n\t\t\t},\n\t\t\tTYPING_TIMEOUT: 1000\n\t\t},\n\t\tCATEGORIES: [\"EDUCACION\", \"FINANZAS\", \"VIVIENDA\", \"IDENTIDAD\", \"BENEFICIOS\", \"LABORAL\"],\n\t\tTYPES: {\n\t\t\tTEXT: \"Text\",\n\t\t\tPARAGRAPH: \"Paragraph\",\n\t\t\tDATE: \"Date\",\n\t\t\tNUMBER: \"Number\",\n\t\t\tBOOLEAN: \"Boolean\",\n\t\t\tCHECKBOX: \"Checkbox\"\n\t\t},\n\t\tTYPE_MAPPING: {\n\t\t\tEmail: \"Email\",\n\t\t\tTelefono: \"Phone\",\n\t\t\tDni: \"dni\",\n\t\t\tNacionalidad: \"nationality\",\n\t\t\tNombres: \"names\",\n\t\t\tNOMBRE: \"names\",\n\t\t\tApellidos: \"lastNames\",\n\t\t\tAPELLIDO: \"lastNames\",\n\t\t\tDireccion: \"streetAddress\",\n\t\t\tCalle: \"numberStreet\",\n\t\t\tPiso: \"floor\",\n\t\t\tDepartamento: \"department\",\n\t\t\t\"Codigo Zip\": \"zipCode\",\n\t\t\t// Ciudad: \"city\",\n\t\t\t// Municipalidad: \"municipality\",\n\t\t\t// Provincia: \"province\",\n\t\t\tPais: \"country\"\n\t\t},\n\t\tSHARED_TYPES: {\n\t\t\tEmail: \"Email\",\n\t\t\tTelefono: \"Telefono\",\n\t\t\tDni: \"Dni\",\n\t\t\tNacionalidad: \"Nacionalidad\",\n\t\t\tNombres: \"Nombres\",\n\t\t\tApellidos: \"Apellidos\",\n\t\t\tDireccion: \"Direccion\",\n\t\t\tCalle: \"Calle\",\n\t\t\tPiso: \"Piso\",\n\t\t\tDepartamento: \"Departamento\",\n\t\t\t\"Codigo Zip\": \"Codigo Zip\",\n\t\t\t// city: \"Ciudad\",\n\t\t\t// municipality: \"Municipalidad\",\n\t\t\t// province: \"Provincia\",\n\t\t\tPais: \"Pais\"\n\t\t},\n\t\tDATA_TYPES: {\n\t\t\tCERT: \"cert\",\n\t\t\tOTHERS: \"others\",\n\t\t\tPARTICIPANT: \"participant\"\n\t\t},\n\t\tMANDATORY_DATA: {\n\t\t\tDID: \"DID\",\n\t\t\tFULL_NAME: \"NOMBRE COMPLETO\",\n\t\t\tPARTICIPANT_FIRST_NAME: \"NOMBRE\",\n\t\t\tPARTICIPANT_LAST_NAME: \"APELLIDO\",\n\t\t\tNAME: \"CERTIFICADO O CURSO\"\n\t\t}\n\t},\n\n\tCERTIFICATES: {\n\t\tERR: {\n\t\t\tINVALID_DID: \"El DID ingresado es incorrecto o mal formado.\",\n\t\t\tCSV_REQUIRED_VALUE_INVALID: function (field) {\n\t\t\t\treturn {\n\t\t\t\t\terr: \"CSV_REQUIRED_VALUE_INVALID\",\n\t\t\t\t\tmessage: \"CSV inválido, el campo \" + field + \" contiene un valor incorrecto\"\n\t\t\t\t};\n\t\t\t},\n\t\t\tCSV_REQUIRED_VALUE_MISSING: function (field) {\n\t\t\t\treturn { err: \"CSV_REQUIRED_VALUE_MISSING\", message: \"CSV inválido, el campo \" + field + \" es obligatorio\" };\n\t\t\t},\n\t\t\tMISSING_FIELD: function (field) {\n\t\t\t\treturn { err: \"REQUIRED_VALUE_MISSING\", message: \"El campo \" + field + \" es obligatorio\" };\n\t\t\t},\n\t\t\tCSV_MISSING_FIELDS: function () {\n\t\t\t\treturn {\n\t\t\t\t\terr: \"CSV_MISSING_FIELDS\",\n\t\t\t\t\tmessage: \"La cantidad de campos en el csv no se corresponde con la del certificado.\"\n\t\t\t\t};\n\t\t\t},\n\t\t\tEXP_DATE_INVALID: {\n\t\t\t\terr: \"EXP_DATE_INVALID\",\n\t\t\t\tmessage: \"La fecha de expiracion debe ser mayor a la fecha actual.\"\n\t\t\t}\n\t\t},\n\t\tMANDATORY_DATA: {\n\t\t\tDID: \"DID\",\n\t\t\tFIRST_NAME: \"NOMBRE\",\n\t\t\tLAST_NAME: \"APELLIDO\"\n\t\t},\n\t\tEDIT: {\n\t\t\tPARTICIPANT_SELECT: \"SELECCIONAR PARTICIPANTE\",\n\t\t\tSPLIT: \"GENERAR MICROCREDENCIALES\",\n\t\t\tTEMPLATE_SELECT: \"CERTIFICADO O CURSO\"\n\t\t},\n\t\tTABLE: {\n\t\t\tPAGE_SIZE: 10,\n\t\t\tMIN_ROWS: 3\n\t\t},\n\t\tREQUEST_TYPES: {\n\t\t\tmail: \"Email\",\n\t\t\ttel: \"Phone\",\n\t\t\tpersonal: \"Datos Personales\",\n\t\t\taddress: \"Domicilio Legal\"\n\t\t}\n\t}\n};\n","module.exports = __webpack_public_path__ + \"static/media/1.6df6277c.png\";","module.exports = __webpack_public_path__ + \"static/media/2.5751f83d.png\";","module.exports = __webpack_public_path__ + \"static/media/3.6b7baf83.png\";","import React, { Component } from \"react\";\n\nimport Messages from \"../../../constants/Messages\";\nimport Spinner from \"../Spinner\";\nimport ConfirmationDialog from \"./ConfirmationDialog\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nimport Select from \"@material-ui/core/Select\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nimport TemplateService from \"../../../services/TemplateService\";\nimport ParticipantService from \"../../../services/ParticipantService\";\nimport Cookie from \"js-cookie\";\n\nvar QRCode = require(\"qrcode\");\n\nlet interval;\nexport default class QrDialog extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tparts: [],\n\t\t\tloading: false,\n\t\t\tisOpen: false,\n\t\t\tqrSet: false\n\t\t};\n\t}\n\n\t// generar referencia para abrirlo desde el padre y pooling de participantes\n\tcomponentDidMount() {\n\t\tthis.props.onRef(this);\n\t\tconst self = this;\n\n\t\tinterval = setInterval(function () {\n\t\t\tif (self.state.qrSet) {\n\t\t\t\tconst token = Cookie.get(\"token\");\n\t\t\t\tParticipantService.getNew(\n\t\t\t\t\ttoken,\n\t\t\t\t\tself.state.requestCode,\n\t\t\t\t\tfunction (participant) {\n\t\t\t\t\t\tif (participant && self.state.qrSet) {\n\t\t\t\t\t\t\tif (self.qrLoadedDialog) self.qrLoadedDialog.open();\n\t\t\t\t\t\t\tself.close();\n\n\t\t\t\t\t\t\tif (self.props.onDataReceived) self.props.onDataReceived([participant]);\n\n\t\t\t\t\t\t\tself.setState({\n\t\t\t\t\t\t\t\tparticipant: participant,\n\t\t\t\t\t\t\t\tqr: undefined,\n\t\t\t\t\t\t\t\tqrSet: false,\n\t\t\t\t\t\t\t\tisOpen: false,\n\t\t\t\t\t\t\t\terror: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tfunction (err) {\n\t\t\t\t\t\tself.setState({ loading: false, error: err });\n\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (self.state.requestSent) {\n\t\t\t\tself.props.onParticipantsReload();\n\t\t\t}\n\t\t}, 10000);\n\t}\n\n\t// borrar referencia\n\t// y parar pooling de participante (espera respuestas del qr)\n\tcomponentWillUnmount() {\n\t\tthis.props.onRef(undefined);\n\t\tif (interval) {\n\t\t\tclearInterval(interval);\n\t\t}\n\t}\n\n\t// abrir dialogo\n\topen = () => {\n\t\tthis.setState({\n\t\t\tisOpen: true\n\t\t});\n\t};\n\n\t// cerrar dialogo\n\tclose = () => {\n\t\tthis.setState({\n\t\t\tisOpen: false\n\t\t});\n\t};\n\n\t// muestra qr para carga de datos de participante para un modelo de certificado en particular\n\tgenerateQrCode = () => {\n\t\tconst token = Cookie.get(\"token\");\n\t\tconst self = this;\n\t\tself.setState({ loading: true, qr: undefined });\n\n\t\tconst code = Math.random().toString(36).slice(-8);\n\n\t\tconst template = self.props.template ? self.props.template : self.state.selectedTemplate;\n\n\t\t// obtener template\n\t\tTemplateService.getQrPetition(\n\t\t\ttoken,\n\t\t\ttemplate._id,\n\t\t\tcode,\n\t\t\tfunction (qr) {\n\t\t\t\tself.setState({\n\t\t\t\t\trequestCode: code,\n\t\t\t\t\tqr: qr,\n\t\t\t\t\tparticipant: undefined,\n\t\t\t\t\tloading: false,\n\t\t\t\t\terror: false\n\t\t\t\t});\n\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t// renderizar qr\n\t\t\t\t\tconst canvas = document.getElementById(\"canvas\");\n\t\t\t\t\tif (canvas) {\n\t\t\t\t\t\tQRCode.toCanvas(canvas, qr, function (error) {\n\t\t\t\t\t\t\tif (error) console.error(error);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tself.setState({ qrSet: true });\n\t\t\t\t\t}\n\t\t\t\t}, 100);\n\t\t\t},\n\t\t\tfunction (err) {\n\t\t\t\tself.setState({ loading: false, error: err });\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t);\n\t};\n\n\t// retorna el participante cargado\n\tgetParticipant = () => {\n\t\tconst part = this.state.participant;\n\t\tif (part) this.setState({ participant: undefined });\n\t\treturn part;\n\t};\n\n\t// retorna dialogo\n\trender = () => {\n\t\tconst title = this.props.title;\n\t\tconst selected = this.props.template;\n\t\tconst loading = this.state.loading || this.props.loading;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{this.renderQrLoadedDialog()}\n\t\t\t\t<Dialog\n\t\t\t\t\tclassName={loading ? \"Loading QrDialog\" : \"QrDialog\"}\n\t\t\t\t\topen={this.state.isOpen}\n\t\t\t\t\tonClose={this.close}\n\t\t\t\t\taria-labelledby=\"form-dialog-title\"\n\t\t\t\t>\n\t\t\t\t\t<DialogTitle id=\"DialogTitle\">{title}</DialogTitle>\n\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t{Spinner.render(loading)}\n\t\t\t\t\t\t<div className=\"QrReq\">\n\t\t\t\t\t\t\t{!selected && this.renderTemplateSelector()}\n\t\t\t\t\t\t\t{this.renderParticipantSelector()}\n\t\t\t\t\t\t\t{this.renderQrPetition()}\n\t\t\t\t\t\t\t{this.renderQrButtons()}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</DialogContent>\n\t\t\t\t</Dialog>\n\t\t\t</div>\n\t\t);\n\t};\n\n\t// muestra el dialogo de \"participante cargado por qr\"\n\trenderQrLoadedDialog = () => {\n\t\tconst participant = this.state.participant;\n\t\treturn (\n\t\t\t<ConfirmationDialog\n\t\t\t\tonRef={ref => (this.qrLoadedDialog = ref)}\n\t\t\t\ttitle={Messages.EDIT.DIALOG.QR.LOADED_BY_QR(participant ? participant.name : \"\")}\n\t\t\t\tmessage={\"\"}\n\t\t\t\tconfirm={Messages.EDIT.BUTTONS.CLOSE}\n\t\t\t\thideClose={true}\n\t\t\t/>\n\t\t);\n\t};\n\n\t// mostrar selector de participantes\n\trenderParticipantSelector = () => {\n\t\tconst participants = this.props.participants;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t{participants && participants.length > 0 && <div>{Messages.EDIT.DIALOG.PARTICIPANT.TITLE}</div>}\n\t\t\t\t{participants && participants.length > 0 && (\n\t\t\t\t\t<Select\n\t\t\t\t\t\tclassName=\"ParticipantsSelector\"\n\t\t\t\t\t\tmultiple\n\t\t\t\t\t\tdisplayEmpty\n\t\t\t\t\t\tvalue={this.state.parts}\n\t\t\t\t\t\tonChange={event => {\n\t\t\t\t\t\t\tthis.setState({ parts: event.target.value });\n\t\t\t\t\t\t}}\n\t\t\t\t\t\trenderValue={selected => selected.map(sel => sel.name).join(\", \")}\n\t\t\t\t\t>\n\t\t\t\t\t\t{participants.map((elem, key) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<MenuItem key={\"ParticipantsSelector-\" + key} value={elem}>\n\t\t\t\t\t\t\t\t\t<Checkbox checked={this.state.parts.indexOf(elem) > -1} />\n\t\t\t\t\t\t\t\t\t<ListItemText primary={elem.name} />\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</Select>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t};\n\n\t// mostrar selector de modelos de certificado para el qr\n\trenderTemplateSelector = () => {\n\t\tconst template = this.props.template;\n\t\tconst templates = this.props.templates;\n\t\tif (template || !templates) {\n\t\t\treturn <div></div>;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"QrTemplateSelector\">\n\t\t\t\t{!this.state.qrSet && <div>{Messages.QR.TEMPLATE_SELECT_MESSAGE}</div>}\n\t\t\t\t{this.state.qrSet && <div>{Messages.QR.QR_MESSAGE}</div>}\n\n\t\t\t\t<div className=\"DataName\">{Messages.QR.TEMPLATE_SELECT}</div>\n\n\t\t\t\t<Autocomplete\n\t\t\t\t\toptions={templates}\n\t\t\t\t\tgetOptionLabel={option => (option ? option.name : \"\")}\n\t\t\t\t\tvalue={this.state.selectedTemplate ? this.state.selectedTemplate : \"\"}\n\t\t\t\t\trenderInput={params => <TextField {...params} variant=\"standard\" label={\"\"} placeholder=\"\" fullWidth />}\n\t\t\t\t\tonChange={(_, value) => {\n\t\t\t\t\t\tthis.setState({ selectedTemplate: value });\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t};\n\n\t// mostrar el qr\n\trenderQrPetition() {\n\t\tconst qr = this.state.qr;\n\t\tif (!qr) {\n\t\t\treturn <div></div>;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"QrPetition\">\n\t\t\t\t<canvas id=\"canvas\"></canvas>\n\t\t\t\t<div className=\"QR_PD\">{Messages.QR.QR_PD}</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t// mostrar botones al pie del dialogo del qr\n\trenderQrButtons = () => {\n\t\tconst disabled = !this.state.selectedTemplate && !this.props.template;\n\t\tconst participants = this.props.participants;\n\t\tconst self = this;\n\n\t\treturn (\n\t\t\t<div className=\"QrButtons\">\n\t\t\t\t<button className=\"CloseButton\" onClick={self.close}>\n\t\t\t\t\t{Messages.EDIT.BUTTONS.CANCEL}\n\t\t\t\t</button>\n\n\t\t\t\t{participants && participants.length > 0 && (\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"QrButton\"\n\t\t\t\t\t\tdisabled={self.state.parts.length === 0}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tif (self.props.onDataReceived) {\n\t\t\t\t\t\t\t\tself.props.onDataReceived(self.state.parts);\n\t\t\t\t\t\t\t\tself.close();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{Messages.EDIT.DIALOG.PARTICIPANT.CREATE}\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\n\t\t\t\t<button className=\"QrButton\" disabled={disabled} onClick={self.generateQrCode}>\n\t\t\t\t\t{Messages.QR.BUTTONS.GENERATE}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t};\n}\n","import React, { Component } from \"react\";\nimport { withRouter, Redirect } from \"react-router\";\nimport \"./Participants.scss\";\n\nimport ReactTable from \"react-table-6\";\nimport \"react-table-6/react-table.css\";\n\nimport ReactFileReader from \"react-file-reader\";\n\nimport Spinner from \"../utils/Spinner\";\nimport QrDialog from \"../utils/dialogs/QrDialog\";\nimport ConfirmationDialog from \"../utils/dialogs/ConfirmationDialog\";\n\nimport TemplateService from \"../../services/TemplateService\";\nimport ParticipantService from \"../../services/ParticipantService\";\nimport Cookie from \"js-cookie\";\n\nimport Constants from \"../../constants/Constants\";\nimport Messages from \"../../constants/Messages\";\n\nlet interval;\nclass Participants extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tloading: false,\n\t\t\trequestSent: false\n\t\t};\n\t}\n\n\t// parar pooling de participantes\n\tcomponentWillUnmount() {\n\t\tif (interval) {\n\t\t\tclearInterval(interval);\n\t\t}\n\t}\n\n\t// carga los participantes e inicializa el pooling de participantes\n\tcomponentDidMount() {\n\t\tconst token = Cookie.get(\"token\");\n\t\tconst self = this;\n\t\tParticipantService.getAllDids(\n\t\t\ttoken,\n\t\t\tfunction (dids) {\n\t\t\t\tself.setState({ dids: dids, error: false });\n\t\t\t},\n\t\t\tfunction (err) {\n\t\t\t\tself.setState({ loading: false, error: err });\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t);\n\n\t\tinterval = setInterval(function () {\n\t\t\tif (self.state.requestSent) {\n\t\t\t\tself.props.onReload();\n\t\t\t}\n\t\t}, 10000);\n\t}\n\n\t// retorna true si hay algun elemento en la tabla seleccionado\n\tcanSendRequest = loading => {\n\t\tif (loading) return false;\n\n\t\tconst partIds = this.props.participants.map(part => part.did);\n\t\tconst selectedParticipants = this.props.selectedParticipants;\n\n\t\tfor (let partId of partIds) {\n\t\t\tfor (let type of Object.keys(selectedParticipants)) {\n\t\t\t\tif (selectedParticipants[type][partId]) return true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t};\n\n\t// manda los pedidos correspondientes a los participantes/certificados seleccionados\n\tsendRequests = () => {\n\t\tconst partIds = this.props.participants.map(part => part.did);\n\t\tconst selectedParticipants = this.props.selectedParticipants;\n\t\tconst requests = {};\n\n\t\tfor (let partId of partIds) {\n\t\t\tfor (let type of Object.keys(selectedParticipants)) {\n\t\t\t\tif (selectedParticipants[type][partId]) {\n\t\t\t\t\tif (!requests[partId]) requests[partId] = [];\n\t\t\t\t\trequests[partId].push(Constants.CERTIFICATES.REQUEST_TYPES[type]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst token = Cookie.get(\"token\");\n\t\tconst self = this;\n\n\t\tfor (let partId of Object.keys(requests)) {\n\t\t\tconst globalRequestCode = Math.random().toString(36).slice(-8);\n\n\t\t\tif (self.reqSentDialog) self.reqSentDialog.open();\n\n\t\t\t// mandar pedido\n\t\t\tTemplateService.sendRequest(\n\t\t\t\ttoken,\n\t\t\t\t[partId],\n\t\t\t\trequests[partId],\n\t\t\t\tglobalRequestCode,\n\t\t\t\tfunction (_) {\n\t\t\t\t\tself.setState({\n\t\t\t\t\t\trequestSent: true\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tfunction (err) {\n\t\t\t\t\tself.setState({ error: err });\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t};\n\n\t// generar csv de ejemplo para carga de participantes\n\tcreateSampleCsv = () => {\n\t\tconst csv = \"DID(ej:did:eth:0x5f6ed832a5fd0f0a58135f9695ea40af8666db31),NOMBRE(un texto)\";\n\n\t\tconst element = document.createElement(\"a\");\n\t\tconst file = new Blob([csv], { type: \"text/plain\" });\n\t\telement.href = URL.createObjectURL(file);\n\t\telement.download = \"sample.csv\";\n\t\tdocument.body.appendChild(element);\n\t\telement.click();\n\t};\n\n\t// cargar participantes desde csv\n\tLoadDidsFromCsv = files => {\n\t\tconst self = this;\n\t\tvar reader = new FileReader();\n\t\treader.onload = function (e) {\n\t\t\tconst result = [];\n\t\t\tconst data = reader.result.split(/[\\r\\n,]+/);\n\n\t\t\tlet index = 2;\n\t\t\tdo {\n\t\t\t\tconst did = data[index];\n\t\t\t\tconst name = index + 1 < data.length ? data[index + 1] : \"\";\n\t\t\t\tif (did && name) result.push({ did: did, name: name });\n\t\t\t\tindex += 2;\n\t\t\t} while (index < data.length);\n\n\t\t\tself.addDids(result);\n\t\t};\n\t\treader.readAsText(files[0]);\n\t};\n\n\t// agrega los dids a partir de la info extraida del csv\n\taddDids = data => {\n\t\tconst token = Cookie.get(\"token\");\n\t\tconst self = this;\n\t\tthis.setState({ loading: true });\n\t\tParticipantService.createNew(\n\t\t\ttoken,\n\t\t\tdata,\n\t\t\tfunction (dids) {\n\t\t\t\tconst local = self.state.dids;\n\t\t\t\tconst acum = {};\n\t\t\t\tfor (let did of dids) acum[did.did] = did.name;\n\t\t\t\tfor (let did of local) acum[did.did] = did.name;\n\n\t\t\t\tconst result = [];\n\t\t\t\tfor (let key of Object.keys(acum)) {\n\t\t\t\t\tresult.push({ did: key, name: acum[key] });\n\t\t\t\t}\n\n\t\t\t\tself.props.onReload();\n\t\t\t\tself.setState({ loading: false, dids: result, error: false });\n\t\t\t},\n\t\t\tfunction (err) {\n\t\t\t\tself.setState({ loading: false, error: err });\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t);\n\t};\n\n\t// volver a listado de certificados\n\tonBack = () => {\n\t\tif (this.reqSentDialog) this.reqSentDialog.close();\n\n\t\tif (this.state.error) {\n\t\t\tthis.setState({ loading: false, error: false });\n\t\t} else {\n\t\t\tif (this.qrDialog) this.qrDialog.close();\n\t\t\tthis.setState({\n\t\t\t\trequestSent: false\n\t\t\t});\n\t\t\tthis.componentDidMount();\n\t\t}\n\t};\n\n\t// mostrar pantalla de carga de participantes\n\trender() {\n\t\tif (!Cookie.get(\"token\")) {\n\t\t\treturn <Redirect to={Constants.ROUTES.LOGIN} />;\n\t\t}\n\n\t\tconst error = this.props.error || this.state.error;\n\t\tconst loading = this.props.loading || this.state.loading;\n\t\treturn (\n\t\t\t<div className={loading ? \"QrReq Loading\" : \"QrReq\"}>\n\t\t\t\t{Spinner.render(loading)}\n\t\t\t\t{this.renderRequestSentDialog()}\n\t\t\t\t{this.renderQrDialog()}\n\t\t\t\t{this.renderTable()}\n\t\t\t\t{this.renderButtons(loading)}\n\t\t\t\t<div className=\"errMsg\">{error && error.message}</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t// muestra el dialogo de carga de participantes por qr para modelo de certificado\n\trenderQrDialog = () => {\n\t\treturn (\n\t\t\t<QrDialog\n\t\t\t\tloading={this.state.loading}\n\t\t\t\tonRef={ref => (this.qrDialog = ref)}\n\t\t\t\ttitle={Messages.EDIT.DIALOG.QR.LOAD_BY_QR}\n\t\t\t\ttemplates={this.props.templates}\n\t\t\t/>\n\t\t);\n\t};\n\n\t// muestra el dialogo de \"pedido enviado\"\n\trenderRequestSentDialog = () => {\n\t\treturn (\n\t\t\t<ConfirmationDialog\n\t\t\t\tonRef={ref => (this.reqSentDialog = ref)}\n\t\t\t\ttitle={Messages.EDIT.DIALOG.QR.REQUEST_SENT}\n\t\t\t\tmessage={\"\"}\n\t\t\t\tconfirm={Messages.EDIT.BUTTONS.CLOSE}\n\t\t\t\thideClose={true}\n\t\t\t/>\n\t\t);\n\t};\n\n\t// mostrar tabla de participantes\n\trenderTable = () => {\n\t\tconst participants = this.props.participants;\n\t\tconst columns = this.props.columns ? this.props.columns : [];\n\n\t\treturn (\n\t\t\t<div className=\"ParticipantsTable\">\n\t\t\t\t<ReactTable\n\t\t\t\t\tsortable={false}\n\t\t\t\t\tpreviousText={Messages.LIST.TABLE.PREV}\n\t\t\t\t\tnextText={Messages.LIST.TABLE.NEXT}\n\t\t\t\t\tdata={participants}\n\t\t\t\t\tcolumns={columns}\n\t\t\t\t\tdefaultPageSize={Constants.TEMPLATES.TABLE.PAGE_SIZE}\n\t\t\t\t\tminRows={Constants.TEMPLATES.TABLE.MIN_ROWS}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t};\n\n\t// mostrar botones al pie de la tabla\n\trenderButtons = loading => {\n\t\treturn (\n\t\t\t<div className=\"QrRequestButtons\">\n\t\t\t\t<div className=\"PartRequestRow\">\n\t\t\t\t\t<button disabled={loading} className=\"SampleCsv\" onClick={this.createSampleCsv}>\n\t\t\t\t\t\t{Messages.EDIT.BUTTONS.SAMPLE_PART_FROM_CSV}\n\t\t\t\t\t</button>\n\n\t\t\t\t\t<ReactFileReader handleFiles={this.LoadDidsFromCsv} fileTypes={\".csv\"}>\n\t\t\t\t\t\t<button disabled={loading} className=\"LoadDidsFromCsv\">\n\t\t\t\t\t\t\t{Messages.EDIT.BUTTONS.LOAD_DIDS_FROM_CSV}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</ReactFileReader>\n\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"QrDialogButton\"\n\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tif (this.qrDialog) this.qrDialog.open();\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{Messages.QR.BUTTONS.QR_LOAD}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"QrButtonsRow\">\n\t\t\t\t\t<button className=\"PartRequestButton\" disabled={!this.canSendRequest(loading)} onClick={this.sendRequests}>\n\t\t\t\t\t\t{Messages.QR.BUTTONS.REQUEST}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t};\n}\n\nexport default withRouter(Participants);\n","import Constants from \"../constants/Constants\";\n\nexport default class UserService {\n\tstatic login(user, pass, cb, errCb) {\n\t\tconst data = {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tname: user,\n\t\t\t\tpassword: pass\n\t\t\t})\n\t\t};\n\n\t\tfetch(Constants.API_ROUTES.LOGIN, data)\n\t\t\t.then(data => {\n\t\t\t\treturn data.json();\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\tif (data.status === \"success\") {\n\t\t\t\t\tconst token = data.data.token;\n\t\t\t\t\treturn cb(token);\n\t\t\t\t} else {\n\t\t\t\t\terrCb(data.data);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => errCb(err));\n\t}\n}\n","import React, { Component } from \"react\";\nimport { withRouter, Redirect } from \"react-router\";\nimport \"./Login.scss\";\n\nimport Cookie from \"js-cookie\";\n\nimport UserService from \"../../services/UserService\";\nimport Constants from \"../../constants/Constants\";\nimport Messages from \"../../constants/Messages\";\n\nclass Login extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tname: \"\",\n\t\t\tpassword: \"\"\n\t\t};\n\t}\n\n\tonLogin = event => {\n\t\tevent.preventDefault();\n\n\t\tlet self = this;\n\t\tUserService.login(\n\t\t\tthis.state.name,\n\t\t\tthis.state.password,\n\t\t\tasync function (token) {\n\t\t\t\tCookie.set(\"token\", token);\n\t\t\t\tself.setState({});\n\t\t\t},\n\t\t\tfunction (err) {\n\t\t\t\tself.setState({ error: err });\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t);\n\t};\n\n\tupdateName = event => {\n\t\tthis.setState({ name: event.target.value, error: \"\" });\n\t};\n\n\tupdatePass = event => {\n\t\tthis.setState({ password: event.target.value, error: \"\" });\n\t};\n\n\trender() {\n\t\tif (Cookie.get(\"token\")) {\n\t\t\treturn <Redirect to={Constants.ROUTES.LIST} />;\n\t\t\t// return <Redirect to={Constants.ROUTES.TEMPLATES} />;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"Login\">\n\t\t\t\t<div className=\"LeftContent\">\n\t\t\t\t\t<h1 className=\"BackgroundText\">{Messages.LOGIN.WELCOME}</h1>\n\t\t\t\t\t<form onSubmit={this.onLogin}>\n\t\t\t\t\t\t<input className=\"LoginInput\" type=\"text\" onChange={this.updateName}></input>\n\t\t\t\t\t\t<input className=\"LoginInput\" type=\"password\" onChange={this.updatePass} autoComplete=\"on\"></input>\n\t\t\t\t\t\t<button className=\"LoginButton\" type=\"submit\" value=\"Submit\">\n\t\t\t\t\t\t\t{Messages.LOGIN.BUTTONS.ENTER}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</form>\n\t\t\t\t\t<div className=\"errMsg\">{this.state.error && this.state.error.message}</div>\n\t\t\t\t\t{/*this.state.token*/}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"RightContent\">\n\t\t\t\t\t<p>Prueba</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withRouter(Login);\n","import React from \"react\";\nimport { ClipLoader } from \"react-spinners\";\n\nconst css = \"z-index: 1; height: 100px; width: 100px; position: absolute; left: 50%; margin-left: -50px; top: 50%; margin-top: -50px;\";\n\nexport default class Spinner {\n\tstatic render(loading) {\n\t\treturn <ClipLoader css={css} size={100} loading={loading} />;\n\t}\n}\n","import React, { Component } from \"react\";\n\nimport Messages from \"../../../constants/Messages\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nexport default class InputDialog extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tconst fields = {};\n\t\tthis.props.fieldNames.forEach(fieldName => (fields[fieldName] = \"\"));\n\n\t\tthis.state = {\n\t\t\tisOpen: false,\n\t\t\tfields: fields\n\t\t};\n\t}\n\n\t// generar referencia para abrirlo desde el padre\n\tcomponentDidMount() {\n\t\tthis.props.onRef(this);\n\t}\n\n\t// borrar referencia\n\tcomponentWillUnmount() {\n\t\tthis.props.onRef(undefined);\n\t}\n\n\t// limpiar campos completados por el usuario\n\tcleanData = () => {\n\t\tconst fields = this.state.fields;\n\t\tfor (let key of Object.keys(this.state.fields)) {\n\t\t\tfields[key] = \"\";\n\t\t}\n\n\t\tthis.setState({\n\t\t\tfields: fields\n\t\t});\n\t};\n\n\t// abrir dialogo\n\topen = () => {\n\t\tthis.cleanData();\n\t\tthis.setState({\n\t\t\tisOpen: true\n\t\t});\n\t};\n\n\t// cerrar dialogo\n\tclose = () => {\n\t\tthis.cleanData();\n\t\tthis.setState({\n\t\t\tisOpen: false\n\t\t});\n\t};\n\n\t// actualiza campo\n\tupdateField = (name, value) => {\n\t\tconst fields = this.state.fields;\n\t\tfields[name] = value;\n\t\tthis.setState({ fields: fields });\n\t};\n\n\t// retorna dialogo\n\trender = () => {\n\t\tconst title = this.props.title;\n\t\tconst onAccept = this.props.onAccept;\n\t\tconst fieldNames = this.props.fieldNames;\n\n\t\treturn (\n\t\t\t<Dialog open={this.state.isOpen} onClose={this.close} aria-labelledby=\"form-dialog-title\">\n\t\t\t\t<DialogTitle id=\"DialogTitle\">{title}</DialogTitle>\n\t\t\t\t<DialogContent>\n\t\t\t\t\t{fieldNames.length &&\n\t\t\t\t\t\tfieldNames.map((name, key) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\tkey={\"field-\" + key}\n\t\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\t\t\t\tid={name}\n\t\t\t\t\t\t\t\t\tlabel={name}\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tonChange={event => {\n\t\t\t\t\t\t\t\t\t\tthis.updateField(name, event.target.value);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t</DialogContent>\n\t\t\t\t<DialogActions>\n\t\t\t\t\t<Button onClick={this.close} color=\"primary\">\n\t\t\t\t\t\t{Messages.LIST.DIALOG.CANCEL}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tonAccept(this.state.fields);\n\t\t\t\t\t\t\tthis.close();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdisabled={Object.values(this.state.fields).indexOf(\"\") >= 0}\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{Messages.LIST.DIALOG.CREATE}\n\t\t\t\t\t</Button>\n\t\t\t\t</DialogActions>\n\t\t\t</Dialog>\n\t\t);\n\t};\n}\n","import React, { Component } from \"react\";\n\nimport Messages from \"../../../constants/Messages\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nexport default class ConfirmationDialog extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tisOpen: false\n\t\t};\n\t}\n\n\t// generar referencia para abrirlo desde el padre\n\tcomponentDidMount() {\n\t\tthis.props.onRef(this);\n\t}\n\n\t// borrar referencia\n\tcomponentWillUnmount() {\n\t\tthis.props.onRef(undefined);\n\t}\n\n\t// abrir dialogo\n\topen = () => {\n\t\tthis.setState({\n\t\t\tisOpen: true\n\t\t});\n\t};\n\n\t// cerrar dialogo\n\tclose = () => {\n\t\tthis.setState({\n\t\t\tisOpen: false\n\t\t});\n\t};\n\n\t// retorna dialogo\n\trender = () => {\n\t\tconst title = this.props.title;\n\t\tconst message = this.props.message;\n\t\tconst confirm = this.props.confirm;\n\t\tconst onAccept = this.props.onAccept;\n\t\tconst hideClose = this.props.hideClose;\n\n\t\treturn (\n\t\t\t<Dialog open={this.state.isOpen} onClose={this.close} aria-labelledby=\"form-dialog-title\">\n\t\t\t\t<DialogTitle id=\"DialogTitle\">{title}</DialogTitle>\n\t\t\t\t<DialogContent>\n\t\t\t\t\t<div>{message}</div>\n\t\t\t\t</DialogContent>\n\t\t\t\t<DialogActions>\n\t\t\t\t\t{!hideClose && (\n\t\t\t\t\t\t<Button onClick={this.close} color=\"primary\">\n\t\t\t\t\t\t\t{Messages.LIST.DIALOG.CANCEL}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t)}\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tif (onAccept) onAccept();\n\t\t\t\t\t\t\tthis.close();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{confirm}\n\t\t\t\t\t</Button>\n\t\t\t\t</DialogActions>\n\t\t\t</Dialog>\n\t\t);\n\t};\n}\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\nimport \"./Templates.scss\";\n\nimport ReactTable from \"react-table-6\";\nimport \"react-table-6/react-table.css\";\n\nimport Constants from \"../../../constants/Constants\";\nimport Messages from \"../../../constants/Messages\";\n\nimport Spinner from \"../../utils/Spinner\";\nimport InputDialog from \"../../utils/dialogs/InputDialog\";\nimport ConfirmationDialog from \"../../utils/dialogs/ConfirmationDialog\";\nimport MaterialIcon from \"material-icons-react\";\n\nclass Templates extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {};\n\t}\n\n\t// generar referencia para abrirlo desde el padre\n\tcomponentDidMount() {\n\t\tthis.props.onRef(this);\n\t}\n\n\t// borrar referencia\n\tcomponentWillUnmount() {\n\t\tthis.props.onRef(undefined);\n\t}\n\n\t// abrir dialogo de borrado de modelos\n\topenDeleteDialog = () => {\n\t\tif (this.deleteDialog) this.deleteDialog.open();\n\t};\n\n\t// mostrar pantalla de modelos de certificados\n\trender() {\n\t\tconst error = this.props.error || this.state.error;\n\t\tconst loading = this.props.loading;\n\t\treturn (\n\t\t\t<div className={loading ? \"Templates Loading\" : \"Templates\"}>\n\t\t\t\t{Spinner.render(loading)}\n\t\t\t\t{this.renderSectionButtons(loading)}\n\t\t\t\t{this.renderDeleteDialog()}\n\t\t\t\t{this.renderCreateDialog()}\n\t\t\t\t{this.renderTable()}\n\t\t\t\t<div className=\"errMsg\">{error && error.message}</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t// muestra el dialogo de creacion\n\trenderCreateDialog = () => {\n\t\treturn (\n\t\t\t<InputDialog\n\t\t\t\tonRef={ref => (this.createDialog = ref)}\n\t\t\t\ttitle={Messages.LIST.DIALOG.CREATE_TEMPLATE_TITLE}\n\t\t\t\tfieldNames={[\"name\"]}\n\t\t\t\tonAccept={this.props.onCreate}\n\t\t\t/>\n\t\t);\n\t};\n\n\t// muestra el dialogo de borrado\n\trenderDeleteDialog = () => {\n\t\treturn (\n\t\t\t<ConfirmationDialog\n\t\t\t\tonRef={ref => (this.deleteDialog = ref)}\n\t\t\t\ttitle={Messages.LIST.DIALOG.DELETE_TEMPLATE_TITLE}\n\t\t\t\tmessage={Messages.LIST.DIALOG.DELETE_CONFIRMATION}\n\t\t\t\tconfirm={Messages.LIST.DIALOG.DELETE}\n\t\t\t\tonAccept={this.props.onDelete}\n\t\t\t/>\n\t\t);\n\t};\n\n\t// muestra boton de creacion de modelos de certificados\n\trenderSectionButtons = loading => {\n\t\tconst selected = this.props.selected;\n\t\treturn (\n\t\t\t<div className=\"HeadButtons\">\n\t\t\t\t{selected && (\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"CreateButton TemplateCreateButton\"\n\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tif (this.createDialog) this.createDialog.open();\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MaterialIcon icon={Constants.TEMPLATES.ICONS.ADD_BUTTON} />\n\t\t\t\t\t\t<div className=\"CreateButtonText TemplateCreateText\">{Messages.LIST.BUTTONS.CREATE_TEMPLATE}</div>\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t};\n\n\t// muestra tabla de modelos de certificados\n\trenderTable = () => {\n\t\tconst templates = this.props.templates;\n\t\tconst columns = this.props.columns ? this.props.columns : [];\n\n\t\treturn (\n\t\t\t<div className=\"TemplateTable\">\n\t\t\t\t<ReactTable\n\t\t\t\t\tsortable={false}\n\t\t\t\t\tpreviousText={Messages.LIST.TABLE.PREV}\n\t\t\t\t\tnextText={Messages.LIST.TABLE.NEXT}\n\t\t\t\t\tdata={templates}\n\t\t\t\t\tcolumns={columns}\n\t\t\t\t\tdefaultPageSize={Constants.TEMPLATES.TABLE.PAGE_SIZE}\n\t\t\t\t\tminRows={Constants.TEMPLATES.TABLE.MIN_ROWS}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t};\n}\n\nexport default withRouter(Templates);\n","import React from \"react\";\nimport Messages from \"../../../constants/Messages\";\n\nclass TemplateTableHelpers {\n\t// genera las columnas de la tabla de modelos de certificados\n\tstatic getTemplateData(template, onEdit, onDelete, isLoading) {\n\t\treturn {\n\t\t\t_id: template._id,\n\t\t\tname: template.name,\n\t\t\tactions: (\n\t\t\t\t<div className=\"Actions\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"EditAction\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tif (!isLoading()) onEdit(template._id);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{Messages.LIST.BUTTONS.EDIT}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"DeleteAction\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tif (!isLoading()) onDelete(template._id);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{Messages.LIST.BUTTONS.DELETE}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)\n\t\t};\n\t}\n\n\t// genera los headers para las columnas de la tabla de modelos de certificados\n\tstatic getTemplateColumns() {\n\t\treturn [\n\t\t\t{\n\t\t\t\tHeader: Messages.LIST.TABLE.TEMPLATE,\n\t\t\t\taccessor: \"name\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: \"\",\n\t\t\t\taccessor: \"actions\"\n\t\t\t}\n\t\t];\n\t}\n}\n\nexport default TemplateTableHelpers;\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\nimport \"./Certificates.scss\";\n\nimport ReactTable from \"react-table-6\";\nimport \"react-table-6/react-table.css\";\n\nimport Constants from \"../../../constants/Constants\";\nimport Messages from \"../../../constants/Messages\";\n\nimport Spinner from \"../../utils/Spinner\";\nimport ConfirmationDialog from \"../../utils/dialogs/ConfirmationDialog\";\nimport MaterialIcon from \"material-icons-react\";\n\nclass Certificates extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tname: \"\"\n\t\t};\n\t}\n\n\t// generar referencia para abrirlo desde el padre\n\tcomponentDidMount() {\n\t\tthis.props.onRef(this);\n\t}\n\n\t// borrar referencia\n\tcomponentWillUnmount() {\n\t\tthis.props.onRef(undefined);\n\t}\n\n\t// a pantalla de edicion\n\tonCertificateEdit = id => {\n\t\tthis.props.history.push(Constants.ROUTES.EDIT_CERT + id);\n\t};\n\n\t// a pantalla de edicion\n\tonCertificateCreate = () => {\n\t\tthis.props.history.push(Constants.ROUTES.EDIT_CERT);\n\t};\n\n\t// abrir dialogo de borrado de modelos\n\topenDeleteDialog = () => {\n\t\tif (this.deleteDialog) this.deleteDialog.open();\n\t};\n\n\t// abrir dialogo de borrado de modelos\n\topenRevokeDialog = () => {\n\t\tif (this.revokeDialog) this.revokeDialog.open();\n\t};\n\n\t// mostrar pantalla de certificados\n\trender() {\n\t\tconst error = this.props.error || this.state.error;\n\t\tconst loading = this.props.loading;\n\t\treturn (\n\t\t\t<div className={loading ? \"Certificates Loading\" : \"Certificates\"}>\n\t\t\t\t{Spinner.render(loading)}\n\t\t\t\t{this.renderDeleteDialog()}\n\t\t\t\t{this.renderRevocationDialog()}\n\t\t\t\t{this.renderSectionButtons(loading)}\n\t\t\t\t{this.renderTable()}\n\t\t\t\t{this.renderButtons(loading)}\n\t\t\t\t<div className=\"errMsg\">{error && error.message}</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t// muestra el dialogo de borrado\n\trenderDeleteDialog = () => {\n\t\treturn (\n\t\t\t<ConfirmationDialog\n\t\t\t\tonRef={ref => (this.deleteDialog = ref)}\n\t\t\t\ttitle={Messages.LIST.DIALOG.DELETE_CERT_TITLE}\n\t\t\t\tmessage={Messages.LIST.DIALOG.DELETE_CONFIRMATION}\n\t\t\t\tconfirm={Messages.LIST.DIALOG.DELETE}\n\t\t\t\tonAccept={this.props.onDelete}\n\t\t\t/>\n\t\t);\n\t};\n\n\t// muestra el dialogo de revocacion\n\trenderRevocationDialog = () => {\n\t\treturn (\n\t\t\t<ConfirmationDialog\n\t\t\t\tonRef={ref => (this.revokeDialog = ref)}\n\t\t\t\ttitle={Messages.LIST.DIALOG.REVOKE_CERT_TITLE}\n\t\t\t\tmessage={Messages.LIST.DIALOG.REVOKE_CONFIRMATION}\n\t\t\t\tconfirm={Messages.LIST.DIALOG.REVOKE}\n\t\t\t\tonAccept={this.props.onDelete}\n\t\t\t/>\n\t\t);\n\t};\n\n\t// muestra boton de creacion de certificados\n\trenderSectionButtons = loading => {\n\t\tconst selected = this.props.selected;\n\t\treturn (\n\t\t\t<div className=\"HeadButtons\">\n\t\t\t\t{selected && (\n\t\t\t\t\t<button disabled={loading} className=\"CreateButton\" onClick={this.onCertificateCreate}>\n\t\t\t\t\t\t<MaterialIcon icon={Constants.TEMPLATES.ICONS.ADD_BUTTON} />\n\t\t\t\t\t\t<div className=\"CreateButtonText EmmitCertText\">{Messages.LIST.BUTTONS.CREATE_CERT}</div>\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t};\n\n\t// muestra tabla de certificados\n\trenderTable = () => {\n\t\tconst certificates = this.props.certificates;\n\t\tconst columns = this.props.columns ? this.props.columns : [];\n\n\t\treturn (\n\t\t\t<div className=\"CertificateTable\">\n\t\t\t\t<ReactTable\n\t\t\t\t\tsortable={false}\n\t\t\t\t\tpreviousText={Messages.LIST.TABLE.PREV}\n\t\t\t\t\tnextText={Messages.LIST.TABLE.NEXT}\n\t\t\t\t\tdata={certificates}\n\t\t\t\t\tcolumns={columns}\n\t\t\t\t\tdefaultPageSize={Constants.CERTIFICATES.TABLE.PAGE_SIZE}\n\t\t\t\t\tminRows={Constants.CERTIFICATES.TABLE.MIN_ROWS}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t};\n\n\t// mostrar botones al pie de la tabla\n\trenderButtons = loading => {\n\t\treturn (\n\t\t\t<div className=\"CertButtons\">\n\t\t\t\t<button disabled={loading} className=\"EmmitSelectedButton\" onClick={this.props.onMultiEmmit}>\n\t\t\t\t\t{Messages.LIST.BUTTONS.EMMIT_SELECTED}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t};\n}\n\nexport default withRouter(Certificates);\n","import React from \"react\";\nimport Messages from \"../../../constants/Messages\";\n\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nclass CertificateTableHelper {\n\t// genera las columnas de la tabla de certificados\n\tstatic getCertificatesData(\n\t\tcert,\n\t\tselectedCertificates,\n\t\tonCertificateSelectToggle,\n\t\tonCertificateEmmit,\n\t\tonCertificateEdit,\n\t\tonCertificateDelete,\n\t\tonCertificateRevoke,\n\t\tisLoading\n\t) {\n\t\tconst emmited = cert.emmitedOn;\n\n\t\treturn {\n\t\t\t_id: cert._id,\n\t\t\tcertName: cert.name,\n\t\t\tcreatedOn: emmited ? cert.emmitedOn.split(\"T\")[0] : \"-\",\n\t\t\tfirstName: cert.firstName,\n\t\t\tlastName: cert.lastName,\n\t\t\tselect: (\n\t\t\t\t<div className=\"Actions\">\n\t\t\t\t\t{!emmited && (\n\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\tchecked={selectedCertificates[cert._id]}\n\t\t\t\t\t\t\tonChange={(_, value) => {\n\t\t\t\t\t\t\t\tif (!isLoading()) onCertificateSelectToggle(cert._id, value);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tactions: (\n\t\t\t\t<div className=\"Actions\">\n\t\t\t\t\t{!emmited && (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"EmmitAction\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tif (!isLoading()) onCertificateEmmit(cert._id);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{Messages.LIST.BUTTONS.EMMIT}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"EditAction\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tif (!isLoading()) onCertificateEdit(cert._id);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{emmited ? Messages.LIST.BUTTONS.VIEW : Messages.LIST.BUTTONS.EDIT}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t\t{!cert.emmitedOn && (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"DeleteAction\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tif (!isLoading()) onCertificateDelete(cert._id);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{Messages.LIST.BUTTONS.DELETE}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{/*cert.emmitedOn && (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"DeleteAction\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tif (!isLoading()) onCertificateRevoke(cert._id);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{Messages.LIST.BUTTONS.REVOKE}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)*/}\n\t\t\t\t</div>\n\t\t\t)\n\t\t};\n\t}\n\n\t// genera los headers para las columnas de la tabla de certificados\n\tstatic getCertColumns(\n\t\tcertificates,\n\t\tselectedCerts,\n\t\tallSelectedCerts,\n\t\tonCertificateSelectAllToggle,\n\t\tonEmmitedFilterChange,\n\t\tonTemplateFilterChange,\n\t\tonFirstNameFilterChange,\n\t\tonLastNameFilterChange,\n\t\tisLoading\n\t) {\n\t\tconst certNames = [...new Set(certificates.map(cert => cert.certName))];\n\n\t\treturn [\n\t\t\t{\n\t\t\t\tHeader: (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div>{Messages.LIST.TABLE.LAST_NAME}</div>\n\t\t\t\t\t\t<input type=\"text\" className=\"TableInputFilter\" onChange={onLastNameFilterChange} />\n\t\t\t\t\t</div>\n\t\t\t\t),\n\t\t\t\taccessor: \"lastName\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div>{Messages.LIST.TABLE.NAME}</div>\n\t\t\t\t\t\t<input type=\"text\" className=\"TableInputFilter\" onChange={onFirstNameFilterChange} />\n\t\t\t\t\t</div>\n\t\t\t\t),\n\t\t\t\taccessor: \"firstName\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div>{Messages.LIST.TABLE.CERT}</div>\n\t\t\t\t\t\t<Select className=\"TableInputFilter Checkbox\" onChange={onTemplateFilterChange}>\n\t\t\t\t\t\t\t<MenuItem value={undefined} className=\"DataInput\">\n\t\t\t\t\t\t\t\t{\"\"}\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t{certNames.map((certName, key) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<MenuItem value={certName} key={\"cert-option-\" + key} className=\"DataInput\">\n\t\t\t\t\t\t\t\t\t\t{certName}\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</div>\n\t\t\t\t),\n\t\t\t\taccessor: \"certName\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div>{Messages.LIST.TABLE.EMISSION_DATE}</div>\n\t\t\t\t\t\t<div>{Messages.LIST.TABLE.EMISSION_DATE2}</div>\n\t\t\t\t\t</div>\n\t\t\t\t),\n\t\t\t\taccessor: \"createdOn\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div>{Messages.LIST.TABLE.ACTIONS}</div>\n\t\t\t\t\t\t<Select className=\"TableInputFilter Checkbox\" onChange={onEmmitedFilterChange}>\n\t\t\t\t\t\t\t<MenuItem value={undefined} className=\"DataInput\">\n\t\t\t\t\t\t\t\t{\"\"}\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value={\"EMITIDOS\"} className=\"DataInput\">\n\t\t\t\t\t\t\t\t{\"EMITIDOS\"}\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value={\"NO EMITIDOS\"} className=\"DataInput\">\n\t\t\t\t\t\t\t\t{\"NO EMITIDOS\"}\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</div>\n\t\t\t\t),\n\t\t\t\taccessor: \"actions\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div>{Messages.LIST.TABLE.SELECT}</div>\n\t\t\t\t\t\t<div>{\"(\" + Object.values(selectedCerts).filter(val => val).length + \")\"}</div>\n\t\t\t\t\t\t<div className=\"Actions\">\n\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\tchecked={allSelectedCerts}\n\t\t\t\t\t\t\t\tonChange={(_, value) => {\n\t\t\t\t\t\t\t\t\tif (!isLoading()) onCertificateSelectAllToggle(value);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t),\n\t\t\t\taccessor: \"select\"\n\t\t\t}\n\t\t];\n\t}\n}\n\nexport default CertificateTableHelper;\n","import Constants from \"../constants/Constants\";\n\nexport default class TemplateService {\n\tstatic create(token, name, cb, errCb) {\n\t\tconst data = {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\ttoken: token\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tname: name\n\t\t\t})\n\t\t};\n\n\t\tfetch(Constants.API_ROUTES.TEMPLATES.CREATE, data)\n\t\t\t.then(data => {\n\t\t\t\treturn data.json();\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\tif (data.status === \"success\") {\n\t\t\t\t\treturn cb(data.data);\n\t\t\t\t} else {\n\t\t\t\t\terrCb(data.data);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => errCb(err));\n\t}\n\n\tstatic save(token, template, cb, errCb) {\n\t\tconst templateData = {\n\t\t\tcert: template.data.cert.map(data => {\n\t\t\t\treturn {\n\t\t\t\t\tname: data.name,\n\t\t\t\t\ttype: data.type,\n\t\t\t\t\tmandatory: data.mandatory,\n\t\t\t\t\tdefaultValue: data.defaultValue,\n\t\t\t\t\trequired: data.required,\n\t\t\t\t\toptions: data.options\n\t\t\t\t};\n\t\t\t}),\n\t\t\tparticipant: template.data.participant.map(data => {\n\t\t\t\treturn {\n\t\t\t\t\tname: data.name,\n\t\t\t\t\ttype: data.type,\n\t\t\t\t\tmandatory: data.mandatory,\n\t\t\t\t\tdefaultValue: data.defaultValue,\n\t\t\t\t\trequired: data.required,\n\t\t\t\t\toptions: data.options\n\t\t\t\t};\n\t\t\t}),\n\t\t\tothers: template.data.others.map(data => {\n\t\t\t\treturn {\n\t\t\t\t\tname: data.name,\n\t\t\t\t\ttype: data.type,\n\t\t\t\t\tmandatory: data.mandatory,\n\t\t\t\t\tdefaultValue: data.defaultValue,\n\t\t\t\t\trequired: data.required,\n\t\t\t\t\toptions: data.options\n\t\t\t\t};\n\t\t\t})\n\t\t};\n\t\tconst url = Constants.API_ROUTES.TEMPLATES.EDIT(template._id);\n\t\tconst data = {\n\t\t\tmethod: \"PUT\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\ttoken: token\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tdata: JSON.stringify(templateData),\n\t\t\t\tpreview: template.previewData,\n\t\t\t\tcategory: template.category,\n\t\t\t\ttype: template.previewType\n\t\t\t})\n\t\t};\n\t\tfetch(url, data)\n\t\t\t.then(data => {\n\t\t\t\treturn data.json();\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\tif (data.status === \"success\") {\n\t\t\t\t\treturn cb(data.data);\n\t\t\t\t} else {\n\t\t\t\t\terrCb(data.data);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => errCb(err));\n\t}\n\n\tstatic getAll(token, cb, errCb) {\n\t\tconst data = {\n\t\t\tmethod: \"GET\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\ttoken: token\n\t\t\t}\n\t\t};\n\n\t\tfetch(Constants.API_ROUTES.TEMPLATES.GET_ALL, data)\n\t\t\t.then(data => {\n\t\t\t\treturn data.json();\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\tif (data.status === \"success\") {\n\t\t\t\t\treturn cb(data.data);\n\t\t\t\t} else {\n\t\t\t\t\terrCb(data.data);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => errCb(err));\n\t}\n\n\tstatic get(token, id, cb, errCb) {\n\t\tconst data = {\n\t\t\tmethod: \"GET\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\ttoken: token\n\t\t\t}\n\t\t};\n\n\t\tfetch(Constants.API_ROUTES.TEMPLATES.GET(id), data)\n\t\t\t.then(data => {\n\t\t\t\treturn data.json();\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\tif (data.status === \"success\") {\n\t\t\t\t\treturn cb(data.data);\n\t\t\t\t} else {\n\t\t\t\t\terrCb(data.data);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => errCb(err));\n\t}\n\n\tstatic getQrPetition(token, id, code, cb, errCb) {\n\t\tconst data = {\n\t\t\tmethod: \"GET\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\ttoken: token\n\t\t\t}\n\t\t};\n\n\t\tfetch(Constants.API_ROUTES.TEMPLATES.GET_QR(id, code), data)\n\t\t\t.then(data => {\n\t\t\t\treturn data.json();\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\tif (data.status === \"success\") {\n\t\t\t\t\treturn cb(data.data);\n\t\t\t\t} else {\n\t\t\t\t\terrCb(data.data);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => errCb(err));\n\t}\n\n\tstatic sendRequest(token, dids, certs, code, cb, errCb) {\n\t\tconst data = {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\ttoken: token\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tdids: dids,\n\t\t\t\tcertNames: certs\n\t\t\t})\n\t\t};\n\n\t\tfetch(Constants.API_ROUTES.TEMPLATES.REQUEST(code), data)\n\t\t\t.then(data => {\n\t\t\t\treturn data.json();\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\tif (data.status === \"success\") {\n\t\t\t\t\treturn cb(data.data);\n\t\t\t\t} else {\n\t\t\t\t\terrCb(data.data);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => errCb(err));\n\t}\n\n\tstatic delete(token, id, cb, errCb) {\n\t\tconst data = {\n\t\t\tmethod: \"DELETE\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\ttoken: token\n\t\t\t}\n\t\t};\n\n\t\tfetch(Constants.API_ROUTES.TEMPLATES.DELETE(id), data)\n\t\t\t.then(data => {\n\t\t\t\treturn data.json();\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\tif (data.status === \"success\") {\n\t\t\t\t\treturn cb(data.data);\n\t\t\t\t} else {\n\t\t\t\t\terrCb(data.data);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => errCb(err));\n\t}\n}\n","import Constants from \"../constants/Constants\";\n\nexport default class ParticipantService {\n\tstatic getGlobal(token, cb, errCb) {\n\t\tconst data = {\n\t\t\tmethod: \"GET\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\ttoken: token\n\t\t\t}\n\t\t};\n\n\t\tfetch(Constants.API_ROUTES.PARTICIPANTS.GET_GLOBAL, data)\n\t\t\t.then(data => {\n\t\t\t\treturn data.json();\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\tif (data.status === \"success\") {\n\t\t\t\t\treturn cb(data.data);\n\t\t\t\t} else {\n\t\t\t\t\terrCb(data.data);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => errCb(err));\n\t}\n\n\tstatic getAll(token, templateId, cb, errCb) {\n\t\tconst data = {\n\t\t\tmethod: \"GET\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\ttoken: token\n\t\t\t}\n\t\t};\n\n\t\tfetch(Constants.API_ROUTES.PARTICIPANTS.GET_ALL(templateId), data)\n\t\t\t.then(data => {\n\t\t\t\treturn data.json();\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\tif (data.status === \"success\") {\n\t\t\t\t\treturn cb(data.data);\n\t\t\t\t} else {\n\t\t\t\t\terrCb(data.data);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => errCb(err));\n\t}\n\n\tstatic createNew(token, partData, cb, errCb) {\n\t\tconst data = {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\ttoken: token\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tdata: partData\n\t\t\t})\n\t\t};\n\n\t\tfetch(Constants.API_ROUTES.PARTICIPANTS.POST_NEW, data)\n\t\t\t.then(data => {\n\t\t\t\treturn data.json();\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\tif (data.status === \"success\") {\n\t\t\t\t\treturn cb(data.data);\n\t\t\t\t} else {\n\t\t\t\t\terrCb(data.data);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => errCb(err));\n\t}\n\n\tstatic getNew(token, code, cb, errCb) {\n\t\tconst data = {\n\t\t\tmethod: \"GET\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\ttoken: token\n\t\t\t}\n\t\t};\n\n\t\tfetch(Constants.API_ROUTES.PARTICIPANTS.GET_NEW(code), data)\n\t\t\t.then(data => {\n\t\t\t\treturn data.json();\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\tif (data.status === \"success\") {\n\t\t\t\t\treturn cb(data.data);\n\t\t\t\t} else {\n\t\t\t\t\terrCb(data.data);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => errCb(err));\n\t}\n\n\tstatic get(token, did, cb, errCb) {\n\t\tconst data = {\n\t\t\tmethod: \"GET\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\ttoken: token\n\t\t\t}\n\t\t};\n\n\t\tfetch(Constants.API_ROUTES.PARTICIPANTS.GET(did), data)\n\t\t\t.then(data => {\n\t\t\t\treturn data.json();\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\tif (data.status === \"success\") {\n\t\t\t\t\treturn cb(data.data);\n\t\t\t\t} else {\n\t\t\t\t\terrCb(data.data);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => errCb(err));\n\t}\n\n\tstatic getAllDids(token, cb, errCb) {\n\t\tconst data = {\n\t\t\tmethod: \"GET\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\ttoken: token\n\t\t\t}\n\t\t};\n\n\t\tfetch(Constants.API_ROUTES.PARTICIPANTS.GET_DIDS, data)\n\t\t\t.then(data => {\n\t\t\t\treturn data.json();\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\tif (data.status === \"success\") {\n\t\t\t\t\treturn cb(data.data);\n\t\t\t\t} else {\n\t\t\t\t\terrCb(data.data);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => errCb(err));\n\t}\n}\n","import React from \"react\";\nimport Messages from \"../../constants/Messages\";\nimport Constants from \"../../constants/Constants\";\nimport MaterialIcon from \"material-icons-react\";\n\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nclass ParticipantsTableHelper {\n\t// genera las columnas de la tabla de certificados\n\tstatic getParticipantData(participant, selectedParticipants, onParticipantSelectToggle, isLoading) {\n\t\treturn {\n\t\t\tdid: participant.did,\n\t\t\tname: participant.name,\n\t\t\ttel: (\n\t\t\t\t<div>\n\t\t\t\t\t{participant.tel && <MaterialIcon color=\"green\" icon={Constants.TEMPLATES.ICONS.OK} />}\n\t\t\t\t\t{!participant.tel && (\n\t\t\t\t\t\t<div className=\"Actions\">\n\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\tchecked={selectedParticipants[\"tel\"][participant.did]}\n\t\t\t\t\t\t\t\tonChange={(_, value) => {\n\t\t\t\t\t\t\t\t\tif (!isLoading()) onParticipantSelectToggle(participant.did, \"tel\", value);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tmail: (\n\t\t\t\t<div>\n\t\t\t\t\t{participant.mail && <MaterialIcon color=\"green\" icon={Constants.TEMPLATES.ICONS.OK} />}\n\t\t\t\t\t{!participant.mail && (\n\t\t\t\t\t\t<div className=\"Actions\">\n\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\tchecked={selectedParticipants[\"mail\"][participant.did]}\n\t\t\t\t\t\t\t\tonChange={(_, value) => {\n\t\t\t\t\t\t\t\t\tif (!isLoading()) onParticipantSelectToggle(participant.did, \"mail\", value);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t),\n\t\t\tpersonal: (\n\t\t\t\t<div>\n\t\t\t\t\t{participant.personal && <MaterialIcon color=\"green\" icon={Constants.TEMPLATES.ICONS.OK} />}\n\t\t\t\t\t{!participant.personal && (\n\t\t\t\t\t\t<div className=\"Actions\">\n\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\tchecked={selectedParticipants[\"personal\"][participant.did]}\n\t\t\t\t\t\t\t\tonChange={(_, value) => {\n\t\t\t\t\t\t\t\t\tif (!isLoading()) onParticipantSelectToggle(participant.did, \"personal\", value);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t),\n\t\t\taddress: (\n\t\t\t\t<div>\n\t\t\t\t\t{participant.address && <MaterialIcon color=\"green\" icon={Constants.TEMPLATES.ICONS.OK} />}\n\t\t\t\t\t{!participant.address && (\n\t\t\t\t\t\t<div className=\"Actions\">\n\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\tchecked={selectedParticipants[\"address\"][participant.did]}\n\t\t\t\t\t\t\t\tonChange={(_, value) => {\n\t\t\t\t\t\t\t\t\tif (!isLoading()) onParticipantSelectToggle(participant.did, \"address\", value);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t)\n\t\t};\n\t}\n\n\t// genera los headers para las columnas de la tabla de certificados\n\tstatic getParticipantColumns(selectedParticipants, allSelectedParts, onParticipantSelectAllToggle, isLoading) {\n\t\treturn [\n\t\t\t{\n\t\t\t\tHeader: Messages.LIST.TABLE.NAME,\n\t\t\t\taccessor: \"name\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div>{Messages.LIST.TABLE.HAS_TEL}</div>\n\t\t\t\t\t\t<div>{\"(\" + Object.values(selectedParticipants[\"tel\"]).filter(val => val).length + \")\"}</div>\n\t\t\t\t\t\t<div className=\"Actions\">\n\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\tchecked={allSelectedParts[\"tel\"]}\n\t\t\t\t\t\t\t\tonChange={(_, value) => {\n\t\t\t\t\t\t\t\t\tif (!isLoading()) onParticipantSelectAllToggle(\"tel\", value);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t),\n\t\t\t\taccessor: \"tel\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div>{Messages.LIST.TABLE.HAS_MAIL}</div>\n\t\t\t\t\t\t<div>{\"(\" + Object.values(selectedParticipants[\"mail\"]).filter(val => val).length + \")\"}</div>\n\t\t\t\t\t\t<div className=\"Actions\">\n\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\tchecked={allSelectedParts[\"mail\"]}\n\t\t\t\t\t\t\t\tonChange={(_, value) => {\n\t\t\t\t\t\t\t\t\tif (!isLoading()) onParticipantSelectAllToggle(\"mail\", value);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t),\n\t\t\t\taccessor: \"mail\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div>{Messages.LIST.TABLE.HAS_PERSONAL}</div>\n\t\t\t\t\t\t<div>{Messages.LIST.TABLE.HAS_PERSONAL2}</div>\n\t\t\t\t\t\t<div>{\"(\" + Object.values(selectedParticipants[\"personal\"]).filter(val => val).length + \")\"}</div>\n\t\t\t\t\t\t<div className=\"Actions\">\n\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\tchecked={allSelectedParts[\"personal\"]}\n\t\t\t\t\t\t\t\tonChange={(_, value) => {\n\t\t\t\t\t\t\t\t\tif (!isLoading()) onParticipantSelectAllToggle(\"personal\", value);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t),\n\t\t\t\taccessor: \"personal\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div>{Messages.LIST.TABLE.HAS_ADDRESS}</div>\n\t\t\t\t\t\t<div>{\"(\" + Object.values(selectedParticipants[\"address\"]).filter(val => val).length + \")\"}</div>\n\t\t\t\t\t\t<div className=\"Actions\">\n\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\tchecked={allSelectedParts[\"address\"]}\n\t\t\t\t\t\t\t\tonChange={(_, value) => {\n\t\t\t\t\t\t\t\t\tif (!isLoading()) onParticipantSelectAllToggle(\"address\", value);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t),\n\t\t\t\taccessor: \"address\"\n\t\t\t}\n\t\t];\n\t}\n}\n\nexport default ParticipantsTableHelper;\n","import Constants from \"../constants/Constants\";\n\nexport default class CertificateService {\n\tstatic save(token, cert, cb, errCb) {\n\t\tconst certData = {\n\t\t\tcert: cert.data.cert.map(data => {\n\t\t\t\treturn {\n\t\t\t\t\tname: data.name,\n\t\t\t\t\tvalue: data.value\n\t\t\t\t};\n\t\t\t}),\n\t\t\tparticipant: cert.data.participant.map(array => {\n\t\t\t\treturn array.map(data => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tname: data.name,\n\t\t\t\t\t\tvalue: data.value\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t}),\n\t\t\tothers: cert.data.others.map(data => {\n\t\t\t\treturn {\n\t\t\t\t\tname: data.name,\n\t\t\t\t\tvalue: data.value\n\t\t\t\t};\n\t\t\t})\n\t\t};\n\n\t\tconst microCredsData = cert.microCredentials\n\t\t\t? cert.microCredentials\n\t\t\t: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle: \"certificate data\",\n\t\t\t\t\t\tnames: cert.data.cert.map(data => data.name)\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle: \"participant data\",\n\t\t\t\t\t\tnames: cert.data.participant[0].map(data => data.name)\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle: \"others data\",\n\t\t\t\t\t\tnames: cert.data.others.map(data => data.name)\n\t\t\t\t\t}\n\t\t\t  ];\n\n\t\tconst method = cert._id ? \"PUT\" : \"POST\";\n\t\tconst url = cert._id ? Constants.API_ROUTES.CERTIFICATES.EDIT(cert._id) : Constants.API_ROUTES.CERTIFICATES.CREATE;\n\t\tconst data = {\n\t\t\tmethod: method,\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\ttoken: token\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\ttemplateId: cert.templateId,\n\t\t\t\tdata: JSON.stringify(certData),\n\t\t\t\tsplit: cert.split,\n\t\t\t\tmicroCredentials: microCredsData\n\t\t\t})\n\t\t};\n\n\t\tfetch(url, data)\n\t\t\t.then(data => {\n\t\t\t\treturn data.json();\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\tif (data.status === \"success\") {\n\t\t\t\t\treturn cb(data.data);\n\t\t\t\t} else {\n\t\t\t\t\terrCb(data.data);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => errCb(err));\n\t}\n\n\tstatic emmit(token, id, cb, errCb) {\n\t\tconst data = {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\ttoken: token\n\t\t\t}\n\t\t};\n\n\t\tfetch(Constants.API_ROUTES.CERTIFICATES.EMMIT(id), data)\n\t\t\t.then(data => {\n\t\t\t\treturn data.json();\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\tif (data.status === \"success\") {\n\t\t\t\t\treturn cb(data.data);\n\t\t\t\t} else {\n\t\t\t\t\terrCb(data.data);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => errCb(err));\n\t}\n\n\tstatic getAll(token, cb, errCb) {\n\t\tconst data = {\n\t\t\tmethod: \"GET\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\ttoken: token\n\t\t\t}\n\t\t};\n\n\t\tfetch(Constants.API_ROUTES.CERTIFICATES.GET_ALL, data)\n\t\t\t.then(data => {\n\t\t\t\treturn data.json();\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\tif (data.status === \"success\") {\n\t\t\t\t\treturn cb(data.data);\n\t\t\t\t} else {\n\t\t\t\t\terrCb(data.data);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => errCb(err));\n\t}\n\n\tstatic get(token, id, cb, errCb) {\n\t\tconst data = {\n\t\t\tmethod: \"GET\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\ttoken: token\n\t\t\t}\n\t\t};\n\n\t\tfetch(Constants.API_ROUTES.CERTIFICATES.GET(id), data)\n\t\t\t.then(data => {\n\t\t\t\treturn data.json();\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\tif (data.status === \"success\") {\n\t\t\t\t\treturn cb(data.data);\n\t\t\t\t} else {\n\t\t\t\t\terrCb(data.data);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => errCb(err));\n\t}\n\n\tstatic delete(token, id, cb, errCb) {\n\t\tconst data = {\n\t\t\tmethod: \"DELETE\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\ttoken: token\n\t\t\t}\n\t\t};\n\n\t\tfetch(Constants.API_ROUTES.CERTIFICATES.DELETE(id), data)\n\t\t\t.then(data => {\n\t\t\t\treturn data.json();\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\tif (data.status === \"success\") {\n\t\t\t\t\treturn cb(data.data);\n\t\t\t\t} else {\n\t\t\t\t\terrCb(data.data);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => errCb(err));\n\t}\n}\n","import React, { Component } from \"react\";\nimport { withRouter, Redirect } from \"react-router\";\nimport \"./Delegates.scss\";\n\nimport Constants from \"../../../constants/Constants\";\nimport Messages from \"../../../constants/Messages\";\nimport Cookie from \"js-cookie\";\n\nimport ReactTable from \"react-table-6\";\nimport \"react-table-6/react-table.css\";\n\nimport Spinner from \"../../utils/Spinner\";\nimport MaterialIcon from \"material-icons-react\";\nimport InputDialog from \"../../utils/dialogs/InputDialog\";\nimport ConfirmationDialog from \"../../utils/dialogs/ConfirmationDialog\";\n\nclass Delegates extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {};\n\t}\n\n\t// generar referencia para abrir dialogo de borrado desde el padre\n\tcomponentDidMount() {\n\t\tthis.props.onRef(this);\n\t}\n\n\t// borrar referencia\n\tcomponentWillUnmount() {\n\t\tthis.props.onRef(undefined);\n\t}\n\n\t// abrir dialogo de borrado\n\topenDeleteDialog = () => {\n\t\tif (this.deleteDialog) this.deleteDialog.open();\n\t};\n\n\t// mostrar pantalla de delegacion\n\trender() {\n\t\tif (!Cookie.get(\"token\")) {\n\t\t\treturn <Redirect to={Constants.ROUTES.LOGIN} />;\n\t\t}\n\n\t\tconst error = this.props.error || this.state.error;\n\t\tconst loading = this.props.loading;\n\t\treturn (\n\t\t\t<div className={loading ? \"Admin Loading\" : \"Admin\"}>\n\t\t\t\t{Spinner.render(loading)}\n\t\t\t\t{this.renderCreateDialog()}\n\t\t\t\t{this.renderDeleteDialog()}\n\n\t\t\t\t{this.renderSectionButtons(loading)}\n\t\t\t\t{this.renderTable()}\n\t\t\t\t<div className=\"errMsg\">{error && error.message}</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t// muestra el dialogo de creacion\n\trenderCreateDialog = () => {\n\t\treturn (\n\t\t\t<InputDialog\n\t\t\t\tonRef={ref => (this.createDialog = ref)}\n\t\t\t\ttitle={Messages.LIST.DIALOG.CREATE_DELEGATE_TITLE}\n\t\t\t\tfieldNames={[\"name\", \"did\"]}\n\t\t\t\tonAccept={this.props.onCreate}\n\t\t\t/>\n\t\t);\n\t};\n\n\t// muestra el dialogo de borrado\n\trenderDeleteDialog = () => {\n\t\treturn (\n\t\t\t<ConfirmationDialog\n\t\t\t\tonRef={ref => (this.deleteDialog = ref)}\n\t\t\t\ttitle={Messages.LIST.DIALOG.DELETE_DELEGATE_TITLE}\n\t\t\t\tmessage={Messages.LIST.DIALOG.DELETE_CONFIRMATION}\n\t\t\t\tconfirm={Messages.LIST.DIALOG.DELETE}\n\t\t\t\tonAccept={this.props.onDelete}\n\t\t\t/>\n\t\t);\n\t};\n\n\t// mostrar boton de creacion\n\trenderSectionButtons = loading => {\n\t\tconst selected = this.props.selected;\n\t\t//const name = this.props.issuerName;\n\t\treturn (\n\t\t\t<div className=\"HeadButtons\">\n\t\t\t\t{selected && (\n\t\t\t\t\t<button\n\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\tclassName=\"CreateButton\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tif (this.createDialog) this.createDialog.open();\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MaterialIcon icon={Constants.DELEGATES.ICONS.ADD_BUTTON} />\n\t\t\t\t\t\t<div className=\"CreateButtonText CreateDelegateText\">{Messages.LIST.BUTTONS.CREATE_DELEGATE}</div>\n\t\t\t\t\t</button>\n\t\t\t\t)}\n\t\t\t\t{/*name && <div className=\"IssuerName\">{name}</div>*/}\n\t\t\t</div>\n\t\t);\n\t};\n\n\t// mostrar tabla de delegados\n\trenderTable = () => {\n\t\tconst delegates = this.props.delegates;\n\t\tconst columns = this.props.columns ? this.props.columns : [];\n\n\t\treturn (\n\t\t\t<div className=\"DelegatesTable\">\n\t\t\t\t<ReactTable\n\t\t\t\t\tsortable={false}\n\t\t\t\t\tpreviousText={Messages.LIST.TABLE.PREV}\n\t\t\t\t\tnextText={Messages.LIST.TABLE.NEXT}\n\t\t\t\t\tdata={delegates}\n\t\t\t\t\tcolumns={columns}\n\t\t\t\t\tdefaultPageSize={Constants.DELEGATES.TABLE.PAGE_SIZE}\n\t\t\t\t\tminRows={Constants.DELEGATES.TABLE.MIN_ROWS}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t};\n}\n\nexport default withRouter(Delegates);\n","import Constants from \"../constants/Constants\";\n\nexport default class DelegateService {\n\tstatic getAll(token, cb, errCb) {\n\t\tconst data = {\n\t\t\tmethod: \"GET\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\ttoken: token\n\t\t\t}\n\t\t};\n\n\t\tfetch(Constants.API_ROUTES.DELEGATE.GET_ALL, data)\n\t\t\t.then(data => {\n\t\t\t\treturn data.json();\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\tif (data.status === \"success\") {\n\t\t\t\t\treturn cb(data.data);\n\t\t\t\t} else {\n\t\t\t\t\terrCb(data.data);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => errCb(err));\n\t}\n\n\tstatic create(token, did, name, cb, errCb) {\n\t\tconst data = {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\ttoken: token\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tdid: did,\n\t\t\t\tname: name\n\t\t\t})\n\t\t};\n\n\t\tfetch(Constants.API_ROUTES.DELEGATE.CREATE, data)\n\t\t\t.then(data => {\n\t\t\t\treturn data.json();\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\tif (data.status === \"success\") {\n\t\t\t\t\treturn cb(data.data);\n\t\t\t\t} else {\n\t\t\t\t\terrCb(data.data);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => errCb(err));\n\t}\n\n\tstatic delete(token, did, cb, errCb) {\n\t\tconst data = {\n\t\t\tmethod: \"DELETE\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\ttoken: token\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tdid: did\n\t\t\t})\n\t\t};\n\n\t\tfetch(Constants.API_ROUTES.DELEGATE.DELETE, data)\n\t\t\t.then(data => {\n\t\t\t\treturn data.json();\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\tif (data.status === \"success\") {\n\t\t\t\t\treturn cb(data.data);\n\t\t\t\t} else {\n\t\t\t\t\terrCb(data.data);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => errCb(err));\n\t}\n\n\tstatic getIssuerName(token, cb, errCb) {\n\t\tconst data = {\n\t\t\tmethod: \"GET\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\ttoken: token\n\t\t\t}\n\t\t};\n\n\t\tfetch(Constants.API_ROUTES.DELEGATE.GET_NAME, data)\n\t\t\t.then(data => {\n\t\t\t\treturn data.json();\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\tif (data.status === \"success\") {\n\t\t\t\t\treturn cb(data.data);\n\t\t\t\t} else {\n\t\t\t\t\terrCb(data.data);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => errCb(err));\n\t}\n\n\tstatic changeIssuerName(token, name, cb, errCb) {\n\t\tconst data = {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\ttoken: token\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tname: name\n\t\t\t})\n\t\t};\n\n\t\tfetch(Constants.API_ROUTES.DELEGATE.CHANGE_NAME, data)\n\t\t\t.then(data => {\n\t\t\t\treturn data.json();\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\tif (data.status === \"success\") {\n\t\t\t\t\treturn cb(data.data);\n\t\t\t\t} else {\n\t\t\t\t\terrCb(data.data);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => errCb(err));\n\t}\n}\n","import React from \"react\";\nimport Messages from \"../../../constants/Messages\";\n\nclass DelegatesTableHelpers {\n\t// genera las columnas de la tabla de modelos de delegados\n\tstatic getDelegatesData(delegate, onDelete, isLoading) {\n\t\treturn {\n\t\t\tdid: delegate.did,\n\t\t\tname: delegate.name,\n\t\t\tactions: (\n\t\t\t\t<div className=\"Actions\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"DeleteAction\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tif (!isLoading()) onDelete(delegate.did);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{Messages.LIST.BUTTONS.DELETE}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)\n\t\t};\n\t}\n\n\t// genera los headers para las columnas de la tabla de delegados\n\tstatic getDelegatesColumns() {\n\t\treturn [\n\t\t\t{\n\t\t\t\tHeader: Messages.LIST.TABLE.DID,\n\t\t\t\taccessor: \"did\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: Messages.LIST.TABLE.NAME,\n\t\t\t\taccessor: \"name\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: \"\",\n\t\t\t\taccessor: \"actions\"\n\t\t\t}\n\t\t];\n\t}\n}\n\nexport default DelegatesTableHelpers;\n","import \"./Main.scss\";\nimport React, { Component } from \"react\";\nimport { withRouter, Redirect } from \"react-router\";\n\nimport Cookie from \"js-cookie\";\n\nimport Constants from \"../../constants/Constants\";\nimport Messages from \"../../constants/Messages\";\n\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\n\nimport Templates from \"../templates/list/Templates\";\nimport TemplateTableHelper from \"../templates/list/TemplateTableHelper\";\n\nimport Certificates from \"../certificates/list/Certificates\";\nimport CertificateTableHelper from \"../certificates/list/CertificateTableHelper\";\n\nimport Participants from \"../participants/Participants\";\nimport ParticipantsTableHelper from \"../participants/ParticipantsTableHelper\";\n\nimport CertificateService from \"../../services/CertificateService\";\nimport TemplateService from \"../../services/TemplateService\";\nimport ParticipantService from \"../../services/ParticipantService\";\n\nimport Delegates from \"../administrative/list/Delegates\";\nimport DelegateService from \"../../services/DelegateService\";\nimport DelegatesTableHelper from \"../administrative/list/DelegatesTableHelper\";\n\nimport InputDialog from \"../utils/dialogs/InputDialog\";\n\nclass Main extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tloading: false,\n\t\t\tshowMenu: false,\n\t\t\ttabIndex: 1,\n\t\t\tpartTypes: [\"tel\", \"mail\", \"personal\", \"address\"],\n\t\t\tparts: [],\n\t\t\tallSelectedParticipants: {\n\t\t\t\ttel: false,\n\t\t\t\tmail: false,\n\t\t\t\tpersonal: false,\n\t\t\t\taddress: false\n\t\t\t},\n\t\t\tselectedParticipants: {\n\t\t\t\ttel: {},\n\t\t\t\tmail: {},\n\t\t\t\tpersonal: {},\n\t\t\t\taddress: {}\n\t\t\t},\n\t\t\tallSelectedCerts: false,\n\t\t\tselectedCerts: {},\n\t\t\tcertificates: [],\n\t\t\tfilteredCertificates: [],\n\t\t\ttemplates: [],\n\t\t\tdelegates: [],\n\t\t\tdelegateColumns: []\n\t\t};\n\t}\n\n\t// cargar certificados\n\tcomponentDidMount() {\n\t\tconst splitPath = this.props.history.location.pathname.split(\"/\");\n\t\tconst active = splitPath[splitPath.length - 1];\n\t\tlet tabIndex = active === \"certificates\" ? 1 : 0;\n\n\t\tconst token = Cookie.get(\"token\");\n\t\tconst self = this;\n\n\t\tself.setState({ loading: true, tabIndex: tabIndex });\n\t\tParticipantService.getGlobal(\n\t\t\ttoken,\n\t\t\tasync function (parts) {\n\t\t\t\tconst allSelectedParticipants = self.state.allSelectedParticipants;\n\t\t\t\tconst selectedParticipants = self.state.selectedParticipants;\n\t\t\t\tself.updateSelectedParticipantsState(parts, selectedParticipants, allSelectedParticipants);\n\n\t\t\t\tTemplateService.getAll(\n\t\t\t\t\ttoken,\n\t\t\t\t\tasync function (templates) {\n\t\t\t\t\t\ttemplates = templates.map(template => {\n\t\t\t\t\t\t\treturn TemplateTableHelper.getTemplateData(\n\t\t\t\t\t\t\t\ttemplate,\n\t\t\t\t\t\t\t\tself.onTemplateEdit,\n\t\t\t\t\t\t\t\tself.onTemplateDeleteDialogOpen,\n\t\t\t\t\t\t\t\t() => self.state.loading\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconst templateColumns = TemplateTableHelper.getTemplateColumns(templates);\n\t\t\t\t\t\tself.setState({\n\t\t\t\t\t\t\ttemplates: templates,\n\t\t\t\t\t\t\ttemplateColumns: templateColumns\n\t\t\t\t\t\t});\n\t\t\t\t\t\tCertificateService.getAll(\n\t\t\t\t\t\t\ttoken,\n\t\t\t\t\t\t\tasync function (certs) {\n\t\t\t\t\t\t\t\tconst selectedCerts = self.state.selectedCerts;\n\t\t\t\t\t\t\t\tself.updateSelectedCertsState(certs, selectedCerts);\n\n\t\t\t\t\t\t\t\tDelegateService.getAll(\n\t\t\t\t\t\t\t\t\ttoken,\n\t\t\t\t\t\t\t\t\tasync function (delegates) {\n\t\t\t\t\t\t\t\t\t\tdelegates = delegates.map(delegate => {\n\t\t\t\t\t\t\t\t\t\t\treturn DelegatesTableHelper.getDelegatesData(\n\t\t\t\t\t\t\t\t\t\t\t\tdelegate,\n\t\t\t\t\t\t\t\t\t\t\t\tself.onDelegateDeleteDialogOpen,\n\t\t\t\t\t\t\t\t\t\t\t\t() => self.state.loading\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tconst delegateColumns = DelegatesTableHelper.getDelegatesColumns();\n\n\t\t\t\t\t\t\t\t\t\tself.setState({\n\t\t\t\t\t\t\t\t\t\t\tdelegateColumns: delegateColumns,\n\t\t\t\t\t\t\t\t\t\t\tdelegates: delegates,\n\t\t\t\t\t\t\t\t\t\t\terror: false,\n\t\t\t\t\t\t\t\t\t\t\tloading: false\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tfunction (err) {\n\t\t\t\t\t\t\t\t\t\tself.setState({ error: err });\n\t\t\t\t\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfunction (err) {\n\t\t\t\t\t\t\t\tself.setState({ error: err });\n\t\t\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t\tfunction (err) {\n\t\t\t\t\t\tself.setState({ error: err });\n\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t},\n\t\t\tfunction (err) {\n\t\t\t\tself.setState({ error: err });\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t);\n\n\t\tDelegateService.getIssuerName(\n\t\t\ttoken,\n\t\t\tfunction (name) {\n\t\t\t\tself.setState({\n\t\t\t\t\tissuerName: name\n\t\t\t\t});\n\t\t\t},\n\t\t\tfunction (err) {\n\t\t\t\tself.setState({ error: err });\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t);\n\t}\n\n\t// seleccionar certificado a pedir para el participante\n\tonParticipantSelectToggle = (id, type, value) => {\n\t\tconst allSelectedParticipants = this.state.allSelectedParticipants;\n\t\tconst selectedParticipants = this.state.selectedParticipants;\n\t\tselectedParticipants[type][id] = value;\n\t\tthis.updateSelectedParticipantsState(this.state.parts, selectedParticipants, allSelectedParticipants);\n\t};\n\n\t// seleccionar certificado a pedir para todos los participantes\n\tonParticipantSelectAllToggle = (type, value) => {\n\t\tconst parts = this.state.parts;\n\t\tconst allSelectedParticipants = this.state.allSelectedParticipants;\n\t\tconst selectedParticipants = this.state.selectedParticipants;\n\n\t\tparts.forEach(part => {\n\t\t\tif (!part[type]) selectedParticipants[type][part.did] = value;\n\t\t});\n\t\tallSelectedParticipants[type] = value;\n\t\tthis.updateSelectedParticipantsState(parts, selectedParticipants, allSelectedParticipants);\n\t};\n\n\t// actualizar seleccion de certificados a pedir para participantes\n\tupdateSelectedParticipantsState = (parts, selectedParts, allSelectedParticipants) => {\n\t\tconst types = this.state.partTypes;\n\t\tparts.forEach(part => {\n\t\t\ttypes.forEach(type => {\n\t\t\t\tif (!part[type] && !selectedParts[type][part.did]) selectedParts[type][part.did] = false;\n\t\t\t});\n\t\t});\n\n\t\ttypes.forEach(type => {\n\t\t\tallSelectedParticipants[type] = true;\n\t\t\tfor (let did of Object.keys(selectedParts[type])) {\n\t\t\t\tif (!selectedParts[type][did]) {\n\t\t\t\t\tallSelectedParticipants[type] = false;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.setState({\n\t\t\tselectedParticipants: selectedParts,\n\t\t\tallSelectedParticipants: allSelectedParticipants\n\t\t});\n\n\t\tconst participants = parts.map(participant => {\n\t\t\treturn ParticipantsTableHelper.getParticipantData(\n\t\t\t\tparticipant,\n\t\t\t\tthis.state.selectedParticipants,\n\t\t\t\tthis.onParticipantSelectToggle,\n\t\t\t\t() => this.state.loading\n\t\t\t);\n\t\t});\n\n\t\tconst participantColumns = ParticipantsTableHelper.getParticipantColumns(\n\t\t\tthis.state.selectedParticipants,\n\t\t\tthis.state.allSelectedParticipants,\n\t\t\tthis.onParticipantSelectAllToggle,\n\t\t\t() => this.state.loading\n\t\t);\n\n\t\tthis.setState({\n\t\t\tparts: parts,\n\t\t\tparticipants: participants,\n\t\t\tparticipantColumns: participantColumns\n\t\t});\n\t};\n\n\t// recargar tabla de participantes\n\tonParticipantsReload = () => {\n\t\tconst self = this;\n\t\tconst token = Cookie.get(\"token\");\n\t\tself.setState({ loading: true });\n\t\tParticipantService.getGlobal(\n\t\t\ttoken,\n\t\t\tasync function (parts) {\n\t\t\t\tconst allSelectedParticipants = self.state.allSelectedParticipants;\n\t\t\t\tconst selectedParticipants = self.state.selectedParticipants;\n\t\t\t\tself.updateSelectedParticipantsState(parts, selectedParticipants, allSelectedParticipants);\n\n\t\t\t\tself.setState({\n\t\t\t\t\terror: false,\n\t\t\t\t\tloading: false\n\t\t\t\t});\n\t\t\t},\n\t\t\tfunction (err) {\n\t\t\t\tself.setState({ loading: false, error: err });\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t);\n\t};\n\n\t// abrir dialogo de confirmacion para revocacion de certificados\n\tonCertificateRevoke = id => {\n\t\tif (this.certificatesSection) {\n\t\t\tthis.setState({ selectedCertId: id });\n\t\t\tthis.certificatesSection.openRevokeDialog();\n\t\t}\n\t};\n\n\t// abrir dialogo de confirmacion para borrado de certificados\n\tonCertificateDeleteDialogOpen = id => {\n\t\tif (this.certificatesSection) {\n\t\t\tthis.setState({ selectedCertId: id });\n\t\t\tthis.certificatesSection.openDeleteDialog();\n\t\t}\n\t};\n\n\t// borrar certificados\n\tonCertificateDelete = () => {\n\t\tconst id = this.state.selectedCertId;\n\t\tconst token = Cookie.get(\"token\");\n\t\tconst self = this;\n\n\t\tconst cert = self.state.certificates.find(t => t._id === id);\n\t\tcert.actions = <div></div>;\n\t\tcert.select = <div></div>;\n\n\t\tself.setState({ certs: self.state.certificates, loading: true });\n\t\tCertificateService.delete(\n\t\t\ttoken,\n\t\t\tid,\n\t\t\tasync function (cert) {\n\t\t\t\tconst certs = self.state.certs.filter(t => t._id !== cert._id);\n\n\t\t\t\tself.setState({\n\t\t\t\t\tcerts: certs,\n\t\t\t\t\tloading: false,\n\t\t\t\t\terror: false\n\t\t\t\t});\n\n\t\t\t\tself.onCertificateSelectAllToggle(false);\n\t\t\t},\n\t\t\tfunction (err) {\n\t\t\t\tself.setState({ error: err, loading: false });\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t);\n\t};\n\n\t// selecciionar certificados para emision multiple\n\tonCertificateSelectToggle = (certId, value) => {\n\t\tconst certs = this.state.certs;\n\t\tconst allSelectedCerts = this.state.allSelectedCerts;\n\t\tconst selectedCerts = this.state.selectedCerts;\n\t\tselectedCerts[certId] = value;\n\t\tthis.updateSelectedCertsState(certs, selectedCerts, allSelectedCerts);\n\t};\n\n\t// seleccionar todos los certificados para emitirlos\n\tonCertificateSelectAllToggle = value => {\n\t\tlet allSelectedCerts = this.state.allSelectedCerts;\n\t\tconst certs = this.state.certs;\n\t\tconst selectedCerts = this.state.selectedCerts;\n\n\t\tcerts.forEach(cert => {\n\t\t\tif (!cert[\"emmitedOn\"]) selectedCerts[cert._id] = value;\n\t\t});\n\t\tallSelectedCerts = value;\n\t\tthis.updateSelectedCertsState(certs, selectedCerts, allSelectedCerts);\n\t};\n\n\t// actualizar seleccion de certificados a emitir\n\tupdateSelectedCertsState = (certs, selectedCerts) => {\n\t\tlet allSelected = true;\n\t\tcerts.forEach(cert => {\n\t\t\tif (!cert[\"emmitedOn\"] && !selectedCerts[cert._id]) {\n\t\t\t\tselectedCerts[cert._id] = false;\n\t\t\t\tallSelected = false;\n\t\t\t}\n\t\t});\n\n\t\tthis.setState({\n\t\t\tselectedCerts: selectedCerts,\n\t\t\tallSelectedCerts: allSelected\n\t\t});\n\n\t\tconst certificates = certs.map(certificate => {\n\t\t\treturn CertificateTableHelper.getCertificatesData(\n\t\t\t\tcertificate,\n\t\t\t\tselectedCerts,\n\t\t\t\tthis.onCertificateSelectToggle,\n\t\t\t\tthis.onCertificateEmmit,\n\t\t\t\tthis.onCertificateEdit,\n\t\t\t\tthis.onCertificateDeleteDialogOpen,\n\t\t\t\tthis.onCertificateRevoke,\n\t\t\t\t() => this.state.loading\n\t\t\t);\n\t\t});\n\t\tconst certColumns = CertificateTableHelper.getCertColumns(\n\t\t\tcertificates,\n\t\t\tselectedCerts,\n\t\t\tallSelected,\n\t\t\tthis.onCertificateSelectAllToggle,\n\t\t\tthis.onEmmitedFilterChange,\n\t\t\tthis.onTemplateFilterChange,\n\t\t\tthis.onFirstNameFilterChange,\n\t\t\tthis.onLastNameFilterChange,\n\t\t\t() => this.state.loading\n\t\t);\n\n\t\tthis.setState({\n\t\t\tcerts: certs,\n\t\t\tcertificates: certificates,\n\t\t\tfilteredCertificates: certificates,\n\t\t\tcertColumns: certColumns\n\t\t});\n\t};\n\n\t// emitir certificados marcados para emision multiple\n\tonCertificateMultiEmmit = () => {\n\t\tconst keys = Object.keys(this.state.selectedCerts);\n\t\tconst toEmmit = keys.filter(key => this.state.selectedCerts[key]);\n\n\t\tif (toEmmit.length === 0) return;\n\n\t\tconst certs = this.state.certificates.filter(t => toEmmit.indexOf(t._id) > -1);\n\t\tcerts.forEach(cert => {\n\t\t\tcert.actions = <div></div>;\n\t\t\tcert.selected = <div></div>;\n\t\t});\n\n\t\tthis.setState({ certs: this.state.certificates, loading: true });\n\n\t\tconst token = Cookie.get(\"token\");\n\t\tconst self = this;\n\n\t\tlet errors = [];\n\t\tconst promises = toEmmit.map(elem => {\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\tCertificateService.emmit(\n\t\t\t\t\ttoken,\n\t\t\t\t\telem,\n\t\t\t\t\tasync function (_) {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t},\n\t\t\t\t\tfunction (err) {\n\t\t\t\t\t\terrors.push(err.message);\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t\t});\n\n\t\tPromise.all(promises)\n\t\t\t.then(function () {\n\t\t\t\tif (errors.length) {\n\t\t\t\t\tlet err = {};\n\t\t\t\t\terr.message = (\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{errors.map((error, key) => (\n\t\t\t\t\t\t\t\t<li key={\"err-\" + key} className=\"errorList\">\n\t\t\t\t\t\t\t\t\t{error}\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t);\n\n\t\t\t\t\tself.setState({ error: err, loading: false });\n\t\t\t\t} else {\n\t\t\t\t\tself.componentDidMount();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(function (err) {\n\t\t\t\tself.setState({ error: err, loading: false });\n\t\t\t});\n\t};\n\n\t// emitir certificados\n\tonCertificateEmmit = id => {\n\t\tconst token = Cookie.get(\"token\");\n\t\tconst self = this;\n\n\t\tconst cert = self.state.certificates.find(t => t._id === id);\n\t\tcert.actions = <div></div>;\n\t\tcert.select = <div></div>;\n\n\t\tself.setState({ certs: self.state.certificates, loading: true });\n\t\tCertificateService.emmit(\n\t\t\ttoken,\n\t\t\tid,\n\t\t\tasync function (_) {\n\t\t\t\tself.componentDidMount();\n\t\t\t},\n\t\t\tfunction (err) {\n\t\t\t\tconsole.log(err);\n\t\t\t\tself.setState({ error: err, loading: false });\n\t\t\t}\n\t\t);\n\t};\n\n\t// a pantalla de edicion\n\tonCertificateEdit = id => {\n\t\tthis.props.history.push(Constants.ROUTES.EDIT_CERT + id);\n\t};\n\n\t// crear templates\n\tonTemplateCreate = data => {\n\t\tconst name = data.name;\n\t\tconst token = Cookie.get(\"token\");\n\t\tconst self = this;\n\t\tself.setState({ loading: true });\n\t\tTemplateService.create(\n\t\t\ttoken,\n\t\t\tname,\n\t\t\tasync function (template) {\n\t\t\t\tconst templates = self.state.templates;\n\t\t\t\tconst data = TemplateTableHelper.getTemplateData(\n\t\t\t\t\ttemplate,\n\t\t\t\t\tself.onTemplateEdit,\n\t\t\t\t\tself.onTemplateDeleteDialogOpen,\n\t\t\t\t\t() => self.state.loading\n\t\t\t\t);\n\t\t\t\ttemplates.push(data);\n\n\t\t\t\tconst templateColumns = TemplateTableHelper.getTemplateColumns(templates);\n\t\t\t\tself.setState({ templates: templates, templateColumns: templateColumns, loading: false, error: false });\n\t\t\t},\n\t\t\tfunction (err) {\n\t\t\t\tself.setState({ loading: false, error: err });\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t);\n\t};\n\n\t// abrir dialogo de borrado\n\tonTemplateDeleteDialogOpen = id => {\n\t\tif (this.templatesSection) {\n\t\t\tthis.setState({ selectedTemplateId: id });\n\t\t\tthis.templatesSection.openDeleteDialog();\n\t\t}\n\t};\n\n\t// borrar templates\n\tonTemplateDelete = () => {\n\t\tconst id = this.state.selectedTemplateId;\n\t\tconst token = Cookie.get(\"token\");\n\t\tconst self = this;\n\t\tself.setState({ loading: true });\n\t\tTemplateService.delete(\n\t\t\ttoken,\n\t\t\tid,\n\t\t\tasync function (template) {\n\t\t\t\tconst templates = self.state.templates.filter(t => t._id !== template._id);\n\t\t\t\tself.setState({ templates: templates, loading: false, error: false });\n\t\t\t},\n\t\t\tfunction (err) {\n\t\t\t\tself.setState({ loading: false, error: err });\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t);\n\t};\n\n\t// filtro por nombre\n\tonFirstNameFilterChange = event => {\n\t\tconst filter = event.target.value;\n\t\tthis.updateFiltererCertificates(\n\t\t\tfilter,\n\t\t\tthis.state.lastNameFilter,\n\t\t\tthis.state.templateFilter,\n\t\t\tthis.state.emmitedFilter\n\t\t);\n\t\tthis.setState({ firstNameFilter: filter });\n\t};\n\n\t// filtro por apellido\n\tonLastNameFilterChange = event => {\n\t\tconst filter = event.target.value;\n\t\tthis.updateFiltererCertificates(\n\t\t\tthis.state.firstNameFilter,\n\t\t\tfilter,\n\t\t\tthis.state.templateFilter,\n\t\t\tthis.state.emmitedFilter\n\t\t);\n\t\tthis.setState({ lastNameFilter: filter });\n\t};\n\n\t// filtro por modelo de certificado\n\tonTemplateFilterChange = event => {\n\t\tconst filter = event.target.value;\n\t\tthis.updateFiltererCertificates(\n\t\t\tthis.state.firstNameFilter,\n\t\t\tthis.state.lastNameFilter,\n\t\t\tfilter,\n\t\t\tthis.state.emmitedFilter\n\t\t);\n\t\tthis.setState({ templateFilter: filter });\n\t};\n\n\t// filtro por estado de emision de certificado\n\tonEmmitedFilterChange = event => {\n\t\tconst filter = event.target.value;\n\t\tthis.updateFiltererCertificates(\n\t\t\tthis.state.firstNameFilter,\n\t\t\tthis.state.lastNameFilter,\n\t\t\tthis.state.templateFilter,\n\t\t\tfilter\n\t\t);\n\t\tthis.setState({ emmitedFilter: filter });\n\t};\n\n\t// actualizar tabla en funcion de los filtros\n\tupdateFiltererCertificates = (firstNameFilter, lastNameFilter, templateFilter, emmitedFilter) => {\n\t\tlet cert = this.state.certificates;\n\n\t\tif (firstNameFilter && firstNameFilter !== \"\") {\n\t\t\tcert = cert.filter(certData => {\n\t\t\t\treturn certData.firstName.toLowerCase().includes(firstNameFilter.toLowerCase());\n\t\t\t});\n\t\t}\n\n\t\tif (lastNameFilter && firstNameFilter !== \"\") {\n\t\t\tcert = cert.filter(certData => {\n\t\t\t\treturn certData.lastName.toLowerCase().includes(lastNameFilter.toLowerCase());\n\t\t\t});\n\t\t}\n\n\t\tif (templateFilter) {\n\t\t\tcert = cert.filter(certData => {\n\t\t\t\treturn certData.certName.toLowerCase().includes(templateFilter.toLowerCase());\n\t\t\t});\n\t\t}\n\n\t\tif (emmitedFilter) {\n\t\t\tif (emmitedFilter === \"EMITIDOS\") {\n\t\t\t\tcert = cert.filter(certData => {\n\t\t\t\t\treturn certData.createdOn !== \"-\";\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tcert = cert.filter(certData => {\n\t\t\t\t\treturn certData.createdOn === \"-\";\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tthis.setState({ filteredCertificates: cert });\n\t};\n\n\t// a pantalla de edicion\n\tonTemplateEdit = id => {\n\t\tthis.props.history.push(Constants.ROUTES.EDIT_TEMPLATE + id);\n\t};\n\n\t// abrir dialogo de borrado\n\tonDelegateDeleteDialogOpen = did => {\n\t\tif (this.delegatesSection) {\n\t\t\tthis.setState({ selectedDelegateDid: did });\n\t\t\tthis.delegatesSection.openDeleteDialog();\n\t\t}\n\t};\n\n\t// crear delegacion\n\tonDelegateCreate = data => {\n\t\tconst did = data.did;\n\t\tconst name = data.name;\n\n\t\tconst token = Cookie.get(\"token\");\n\t\tconst self = this;\n\t\tself.setState({ loading: true });\n\t\tDelegateService.create(\n\t\t\ttoken,\n\t\t\tdid,\n\t\t\tname,\n\t\t\tasync function (delegate) {\n\t\t\t\tconst delegates = self.state.delegates;\n\t\t\t\tconst data = DelegatesTableHelper.getDelegatesData(\n\t\t\t\t\tdelegate,\n\t\t\t\t\tself.onDelegateDeleteDialogOpen,\n\t\t\t\t\t() => self.state.loading\n\t\t\t\t);\n\t\t\t\tdelegates.push(data);\n\t\t\t\tconst delegateColumns = DelegatesTableHelper.getDelegatesColumns();\n\t\t\t\tself.setState({ delegates: delegates, delegateColumns: delegateColumns, loading: false, error: false });\n\t\t\t},\n\t\t\tfunction (err) {\n\t\t\t\tself.setState({ loading: false, error: err });\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t);\n\t};\n\n\t// borrar delegacion\n\tonDelegateDelete = () => {\n\t\tconst did = this.state.selectedDelegateDid;\n\n\t\tconst token = Cookie.get(\"token\");\n\t\tconst self = this;\n\t\tself.setState({ loading: true });\n\t\tDelegateService.delete(\n\t\t\ttoken,\n\t\t\tdid,\n\t\t\tasync function (delegate) {\n\t\t\t\tconst delegates = self.state.delegates.filter(t => t.did !== delegate.did);\n\t\t\t\tself.setState({ delegates: delegates, loading: false, error: false, selectedDelegateDid: undefined });\n\t\t\t},\n\t\t\tfunction (err) {\n\t\t\t\tself.setState({ loading: false, error: err, selectedDelegateDid: undefined });\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t);\n\t};\n\n\t// renombrar issuer (nombre que aparecera en los certificados emitidos)\n\tonIssuerRename = data => {\n\t\tconst name = data.name;\n\t\tconst token = Cookie.get(\"token\");\n\t\tconst self = this;\n\t\tself.setState({ loading: true });\n\t\tDelegateService.changeIssuerName(\n\t\t\ttoken,\n\t\t\tname,\n\t\t\tasync function (name) {\n\t\t\t\tself.setState({ loading: false, error: false, issuerName: name });\n\t\t\t},\n\t\t\tfunction (err) {\n\t\t\t\tself.setState({ loading: false, error: err, selectedDelegateDid: undefined });\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t);\n\t};\n\n\t// a pantalla de login\n\tonLogout = () => {\n\t\tCookie.set(\"token\", \"\");\n\t\tthis.props.history.push(Constants.ROUTES.LOGIN);\n\t};\n\n\t// mostrar pantalla principal con tabs para las distintas secciones\n\trender() {\n\t\tif (!Cookie.get(\"token\")) {\n\t\t\treturn <Redirect to={Constants.ROUTES.LOGIN} />;\n\t\t}\n\n\t\treturn (\n\t\t\t<Tabs\n\t\t\t\tselectedIndex={this.state.tabIndex}\n\t\t\t\tonSelect={tabIndex => this.setState({ tabIndex: tabIndex, error: false })}\n\t\t\t>\n\t\t\t\t{this.renderRenameDialog()}\n\t\t\t\t{this.renderActions(this.state.loading)}\n\n\t\t\t\t<TabList>\n\t\t\t\t\t<Tab disabled={this.state.loading && this.state.tabIndex !== 0}>{Messages.LIST.BUTTONS.TO_TEMPLATES}</Tab>\n\t\t\t\t\t<Tab disabled={this.state.loading && this.state.tabIndex !== 1}>{Messages.LIST.BUTTONS.TO_CERTIFICATES}</Tab>\n\t\t\t\t\t<Tab disabled={this.state.loading && this.state.tabIndex !== 2}>{Messages.LIST.BUTTONS.TO_QR}</Tab>\n\t\t\t\t\t<Tab disabled={this.state.loading && this.state.tabIndex !== 3}>{Messages.LIST.BUTTONS.DELEGATES}</Tab>\n\t\t\t\t</TabList>\n\n\t\t\t\t<TabPanel>\n\t\t\t\t\t<Templates\n\t\t\t\t\t\tonRef={ref => (this.templatesSection = ref)}\n\t\t\t\t\t\tselected={this.state.tabIndex === 0}\n\t\t\t\t\t\ttemplates={this.state.templates}\n\t\t\t\t\t\tcolumns={this.state.templateColumns}\n\t\t\t\t\t\tloading={this.state.loading}\n\t\t\t\t\t\terror={this.state.error}\n\t\t\t\t\t\tonCreate={this.onTemplateCreate}\n\t\t\t\t\t\tonDelete={this.onTemplateDelete}\n\t\t\t\t\t/>\n\t\t\t\t</TabPanel>\n\t\t\t\t<TabPanel>\n\t\t\t\t\t<Certificates\n\t\t\t\t\t\tonRef={ref => (this.certificatesSection = ref)}\n\t\t\t\t\t\tselected={this.state.tabIndex === 1}\n\t\t\t\t\t\tcertificates={this.state.filteredCertificates}\n\t\t\t\t\t\tcolumns={this.state.certColumns}\n\t\t\t\t\t\tloading={this.state.loading}\n\t\t\t\t\t\tonMultiEmmit={this.onCertificateMultiEmmit}\n\t\t\t\t\t\tonDelete={this.onCertificateDelete}\n\t\t\t\t\t\terror={this.state.error}\n\t\t\t\t\t/>\n\t\t\t\t</TabPanel>\n\t\t\t\t<TabPanel>\n\t\t\t\t\t<Participants\n\t\t\t\t\t\tselected={this.state.tabIndex === 2}\n\t\t\t\t\t\tloading={this.state.loading}\n\t\t\t\t\t\ttemplates={this.state.templates}\n\t\t\t\t\t\tparticipants={this.state.participants}\n\t\t\t\t\t\tcolumns={this.state.participantColumns}\n\t\t\t\t\t\terror={this.state.error}\n\t\t\t\t\t\tonReload={this.onParticipantsReload}\n\t\t\t\t\t\tselectedParticipants={this.state.selectedParticipants}\n\t\t\t\t\t/>\n\t\t\t\t</TabPanel>\n\n\t\t\t\t<TabPanel>\n\t\t\t\t\t<Delegates\n\t\t\t\t\t\tonRef={ref => (this.delegatesSection = ref)}\n\t\t\t\t\t\tloading={this.state.loading}\n\t\t\t\t\t\tselected={this.state.tabIndex === 3}\n\t\t\t\t\t\tdelegates={this.state.delegates}\n\t\t\t\t\t\tcolumns={this.state.delegateColumns}\n\t\t\t\t\t\tonRename={this.onIssuerRename}\n\t\t\t\t\t\tonCreate={this.onDelegateCreate}\n\t\t\t\t\t\tonDelete={this.onDelegateDelete}\n\t\t\t\t\t\tissuerName={this.state.issuerName}\n\t\t\t\t\t\terror={this.state.error}\n\t\t\t\t\t/>\n\t\t\t\t</TabPanel>\n\t\t\t</Tabs>\n\t\t);\n\t}\n\n\t// muestra el dialogo de cambio de nombre para el issuer\n\trenderRenameDialog = () => {\n\t\treturn (\n\t\t\t<InputDialog\n\t\t\t\tonRef={ref => (this.renameDialog = ref)}\n\t\t\t\ttitle={Messages.LIST.DIALOG.ISSUER_RENAME_TITLE(this.state.issuerName)}\n\t\t\t\tfieldNames={[\"name\"]}\n\t\t\t\tonAccept={this.onIssuerRename}\n\t\t\t/>\n\t\t);\n\t};\n\n\ttoggleShowMenu = () => {\n\t\tthis.setState({ showMenu: !this.state.showMenu });\n\t};\n\n\t// mostrar botones al pie de la tabla\n\trenderActions = loading => {\n\t\tconst showMenu = this.state.showMenu;\n\t\treturn (\n\t\t\t<div className=\"ActionsMenu\">\n\t\t\t\t<button onClick={this.toggleShowMenu}>{Messages.LIST.MENU.TITLE}</button>\n\t\t\t\t{showMenu && (\n\t\t\t\t\t<div className=\"ActionsMenuItems\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tif (this.renameDialog) this.renameDialog.open();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{Messages.EDIT.BUTTONS.RENAME_ISSUER}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button onClick={this.onLogout}>{Messages.EDIT.BUTTONS.EXIT}</button>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t};\n}\n\nexport default withRouter(Main);\n","import React from \"react\";\nimport \"./DataRenderer.scss\";\n\nimport Constants from \"../../constants/Constants\";\nimport Messages from \"../../constants/Messages\";\n\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nimport MaterialIcon from \"material-icons-react\";\n\nimport NumericInput from \"react-numeric-input\";\nimport dateFormat from \"dateformat\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default class DataRenderer {\n\t// mostrar / editar campos genericos\n\tstatic renderData = (dataElem, type, allowEdit, onChange, blockMandatory) => {\n\t\tconst value = dataElem.value !== undefined ? dataElem.value : dataElem.defaultValue;\n\n\t\tif (dataElem.name === Constants.TEMPLATES.MANDATORY_DATA.NAME) {\n\t\t\treturn <div className=\"DataInput Mandatory\">{value}</div>;\n\t\t} else {\n\t\t\tif (blockMandatory && Object.values(Constants.TEMPLATES.MANDATORY_DATA).indexOf(dataElem.name) >= 0)\n\t\t\t\treturn <div className=\"DataInput Mandatory\">{value}</div>;\n\t\t}\n\n\t\tswitch (dataElem.type) {\n\t\t\tcase Constants.TEMPLATES.TYPES.BOOLEAN:\n\t\t\t\treturn (\n\t\t\t\t\t<Select\n\t\t\t\t\t\tclassName=\"DataInput Boolean\"\n\t\t\t\t\t\tdisabled={!allowEdit}\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\tvalue={value ? value : \"\"}\n\t\t\t\t\t\tonChange={event => {\n\t\t\t\t\t\t\tonChange(dataElem, event.target.value, type);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuItem className=\"DataInput\" value={\"true\"}>\n\t\t\t\t\t\t\t{Constants.TEMPLATES.EDIT.BOOLEAN.TRUE}\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t<MenuItem className=\"DataInput\" value={\"false\"}>\n\t\t\t\t\t\t\t{Constants.TEMPLATES.EDIT.BOOLEAN.FALSE}\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t</Select>\n\t\t\t\t);\n\t\t\tcase Constants.TEMPLATES.TYPES.CHECKBOX:\n\t\t\t\treturn (\n\t\t\t\t\t<Select\n\t\t\t\t\t\tclassName=\"DataInput Checkbox\"\n\t\t\t\t\t\tdisabled={!allowEdit}\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\tvalue={value ? value : dataElem.options[0]}\n\t\t\t\t\t\tonChange={event => {\n\t\t\t\t\t\t\tonChange(dataElem, event.target.value, type);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{dataElem.options.map((opt, key) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<MenuItem value={opt} key={\"option-\" + key} className=\"DataInput\">\n\t\t\t\t\t\t\t\t\t{opt}\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</Select>\n\t\t\t\t);\n\t\t\tcase Constants.TEMPLATES.TYPES.DATE:\n\t\t\t\treturn (\n\t\t\t\t\t<DatePicker\n\t\t\t\t\t\tdisabled={!allowEdit}\n\t\t\t\t\t\tclassName=\"DataInput Date\"\n\t\t\t\t\t\tselected={value ? new Date(value) : undefined}\n\t\t\t\t\t\tonChange={date => {\n\t\t\t\t\t\t\tdate = dateFormat(date, \"yyyy-mm-dd hh:MM:ss\");\n\t\t\t\t\t\t\tonChange(dataElem, date.replace(\" \", \"T\") + \"Z\", type);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdateFormat=\"dd-MM-yyyy\"\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\tcase Constants.TEMPLATES.TYPES.NUMBER:\n\t\t\t\treturn (\n\t\t\t\t\t<NumericInput\n\t\t\t\t\t\tclassName=\"DataInput Number\"\n\t\t\t\t\t\tdisabled={!allowEdit}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tonChange={value => {\n\t\t\t\t\t\t\tonChange(dataElem, value, type);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\tcase Constants.TEMPLATES.TYPES.PARAGRAPH:\n\t\t\t\treturn (\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tclassName=\"DataInput Paragraph\"\n\t\t\t\t\t\tdisabled={!allowEdit}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tonChange={event => {\n\t\t\t\t\t\t\tonChange(dataElem, event.target.value, type);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\tcase Constants.TEMPLATES.TYPES.TEXT:\n\t\t\tdefault:\n\t\t\t\tconst val = value ? value : \"\";\n\t\t\t\treturn (\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName=\"DataInput\"\n\t\t\t\t\t\tdisabled={!allowEdit}\n\t\t\t\t\t\tvalue={val}\n\t\t\t\t\t\tonChange={event => {\n\t\t\t\t\t\t\tonChange(dataElem, event.target.value, type);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t}\n\t};\n\n\t// mostrar boton de requerido\n\tstatic renderRequired = (dataElem, type, onChange) => {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"DataRequired\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tonChange(dataElem, type);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{(dataElem.required || dataElem.mandatory) && (\n\t\t\t\t\t<MaterialIcon icon={Constants.TEMPLATES.EDIT.ICONS.REQUIRED} color=\"#bdbfbe\" />\n\t\t\t\t)}\n\t\t\t\t{!dataElem.required && !dataElem.mandatory && (\n\t\t\t\t\t<MaterialIcon icon={Constants.TEMPLATES.EDIT.ICONS.NOT_REQUIRED} color=\"#bdbfbe\" />\n\t\t\t\t)}\n\t\t\t\t<div>{Messages.EDIT.BUTTONS.REQUIRED}</div>\n\t\t\t</div>\n\t\t);\n\t};\n\n\t// mostrar boton de borrado\n\tstatic renderDelete = (dataElem, type, onClick) => {\n\t\tif (dataElem.mandatory) return <div></div>;\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"DataDelete\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tonClick(dataElem, type);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<MaterialIcon icon={Constants.TEMPLATES.EDIT.ICONS.DELETE} color=\"#eb4646\" />\n\t\t\t\t<div>{Messages.EDIT.BUTTONS.DELETE}</div>\n\t\t\t</div>\n\t\t);\n\t};\n}\n","import React, { Component } from \"react\";\n\nimport Constants from \"../../../constants/Constants\";\nimport Messages from \"../../../constants/Messages\";\n\nimport MaterialIcon from \"material-icons-react\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nexport default class TemplateFieldAddDialog extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tisOpen: false,\n\t\t\tname: \"\",\n\t\t\toptions: [],\n\t\t\tdataType: Constants.TEMPLATES.TYPES.TEXT,\n\t\t\trequired: false\n\t\t};\n\t}\n\n\t// generar referencia para abrirlo desde el padre\n\tcomponentDidMount() {\n\t\tthis.props.onRef(this);\n\t}\n\n\t// borrar referencia\n\tcomponentWillUnmount() {\n\t\tthis.props.onRef(undefined);\n\t}\n\n\t// limpiar campos completados por el usuario\n\tcleanData = () => {\n\t\tthis.setState({\n\t\t\tname: \"\",\n\t\t\tdataType: Constants.TEMPLATES.TYPES.TEXT,\n\t\t\toptions: [],\n\t\t\trequired: false\n\t\t});\n\t};\n\n\t// abrir dialogo\n\topen = type => {\n\t\tthis.cleanData();\n\t\tthis.setState({\n\t\t\ttype: type,\n\t\t\tisOpen: true\n\t\t});\n\t};\n\n\t// cerrar dialogo\n\tclose = () => {\n\t\tthis.cleanData();\n\t\tthis.setState({\n\t\t\ttype: undefined,\n\t\t\tisOpen: false\n\t\t});\n\t};\n\n\t// agregar campo al template con la info proveniente del dialogo\n\tcreateField = () => {\n\t\tconst type = this.state.type;\n\t\tconst data = {\n\t\t\tname: this.state.name,\n\t\t\ttype: this.state.dataType,\n\t\t\tmandatory: false,\n\t\t\trequired: this.state.required,\n\t\t\toptions: this.state.options.length ? this.state.options : []\n\t\t};\n\t\tthis.props.onAccept(data, type);\n\t};\n\n\t// retornar dialogo para agregar o eliminar campos del modelo\n\trender = () => {\n\t\tconst title = this.props.title;\n\t\tconst isCheckbox = this.state.dataType === Constants.TEMPLATES.TYPES.CHECKBOX;\n\n\t\treturn (\n\t\t\t<Dialog open={this.state.isOpen} onClose={this.close} aria-labelledby=\"form-dialog-title\">\n\t\t\t\t<DialogTitle className=\"DialogTitle\">{title}</DialogTitle>\n\t\t\t\t<DialogContent>\n\t\t\t\t\t{this.renderDialogName()}\n\t\t\t\t\t{isCheckbox && this.renderDialogCheckbox()}\n\t\t\t\t\t{this.renderDialogTypes()}\n\t\t\t\t\t{this.renderDialogRequired()}\n\t\t\t\t</DialogContent>\n\t\t\t\t<DialogActions>\n\t\t\t\t\t<Button onClick={this.close} color=\"primary\">\n\t\t\t\t\t\t{Messages.EDIT.DIALOG.FIELD.CLOSE}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={this.createField}\n\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t!this.state.name ||\n\t\t\t\t\t\t\t(this.state.dataType === Constants.TEMPLATES.TYPES.CHECKBOX && !this.state.options.length)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{Messages.EDIT.DIALOG.FIELD.CREATE}\n\t\t\t\t\t</Button>\n\t\t\t\t</DialogActions>\n\t\t\t</Dialog>\n\t\t);\n\t};\n\n\t// mostrar controles para definir el nombre del campo a agregar\n\trenderDialogName = () => {\n\t\treturn (\n\t\t\t<TextField\n\t\t\t\tautoFocus\n\t\t\t\tmargin=\"dense\"\n\t\t\t\tid=\"name\"\n\t\t\t\tlabel={Messages.EDIT.DIALOG.FIELD.NAME}\n\t\t\t\ttype=\"text\"\n\t\t\t\tvalue={this.state.name}\n\t\t\t\tonChange={event => this.setState({ name: event.target.value })}\n\t\t\t\tfullWidth\n\t\t\t/>\n\t\t);\n\t};\n\n\t// mostrar controles para definir si el campo es requerido o no\n\trenderDialogRequired = () => {\n\t\treturn (\n\t\t\t<div id=\"Required\">\n\t\t\t\t<input\n\t\t\t\t\tclassName=\"RequiredInput\"\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tonChange={event => {\n\t\t\t\t\t\tthis.setState({ required: event.target.checked });\n\t\t\t\t\t}}\n\t\t\t\t></input>\n\t\t\t\t<div className=\"RequiredText\">{Messages.EDIT.DIALOG.FIELD.REQUIRED}</div>\n\t\t\t</div>\n\t\t);\n\t};\n\n\t// mostrar controles para definir el tipo de dato para el campo a agregar\n\trenderDialogTypes = () => {\n\t\tlet types = Constants.TEMPLATES.TYPES;\n\t\tif (this.state.type === Constants.TEMPLATES.DATA_TYPES.PARTICIPANT)\n\t\t\ttypes = Object.assign({}, Constants.TEMPLATES.TYPES, Constants.TEMPLATES.SHARED_TYPES);\n\n\t\treturn (\n\t\t\t<div id=\"Types\">\n\t\t\t\t<InputLabel>{Messages.EDIT.DIALOG.FIELD.TYPES}</InputLabel>\n\t\t\t\t<Select\n\t\t\t\t\tclassName={\"DialogTypeDropdown\"}\n\t\t\t\t\tautoFocus\n\t\t\t\t\tvalue={this.state.dataType}\n\t\t\t\t\tonChange={event => {\n\t\t\t\t\t\tif (Object.keys(Constants.TEMPLATES.SHARED_TYPES).indexOf(event.target.value) >= 0) {\n\t\t\t\t\t\t\tthis.setState({ name: event.target.value, dataType: \"Text\" });\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.setState({ dataType: event.target.value });\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{Object.values(types).map((type, key) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<MenuItem value={type} key={\"type-\" + key}>\n\t\t\t\t\t\t\t\t{type}\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</Select>\n\t\t\t</div>\n\t\t);\n\t};\n\n\t// mostrar controles para definir los valores posibles en caso que el tipo elegido sea \"checkbox\"\n\trenderDialogCheckbox = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div id=\"Options\">\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\tmargin=\"dense\"\n\t\t\t\t\t\tid=\"option\"\n\t\t\t\t\t\tlabel={Messages.EDIT.DIALOG.FIELD.OPTION}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tonChange={event => this.setState({ option: event.target.value })}\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t/>\n\n\t\t\t\t\t<div\n\t\t\t\t\t\tid=\"OptionAdd\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tthis.state.options.push(this.state.option);\n\t\t\t\t\t\t\tthis.setState({ options: this.state.options, option: \"\" });\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MaterialIcon id=\"AddOptionIcon\" icon={Constants.TEMPLATES.EDIT.ICONS.ADD_OPTION} color={\"#3f51b5\"} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t{this.state.options.map((op, key) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div key={\"opt-\" + key}>\n\t\t\t\t\t\t\t{op}\n\n\t\t\t\t\t\t\t<MaterialIcon\n\t\t\t\t\t\t\t\tid=\"DeleteIcon\"\n\t\t\t\t\t\t\t\ticon={Constants.TEMPLATES.EDIT.ICONS.REMOVE_OPTION}\n\t\t\t\t\t\t\t\tcolor={\"rgb(235, 70, 70)\"}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tthis.state.options.splice(key, 1);\n\t\t\t\t\t\t\t\t\tthis.setState({ options: this.state.options, option: \"\" });\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t);\n\t};\n}\n","import React, { Component } from \"react\";\nimport { withRouter, Redirect } from \"react-router\";\nimport \"./Template.scss\";\n\nimport Cookie from \"js-cookie\";\nimport MaterialIcon from \"material-icons-react\";\n\nimport Spinner from \"../../utils/Spinner\";\nimport DataRenderer from \"../../utils/DataRenderer\";\nimport TemplateFieldAddDialog from \"../../utils/dialogs/TemplateFieldAddDialog\";\n\nimport TemplateService from \"../../../services/TemplateService\";\nimport Constants from \"../../../constants/Constants\";\nimport Messages from \"../../../constants/Messages\";\n\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\n\nclass Template extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tloading: true,\n\t\t\ttypingTimeout: 0,\n\t\t\ttyping: false,\n\t\t\tradioValue: 1\n\t\t};\n\t}\n\n\t// cargar modelo de certificado\n\tcomponentDidMount() {\n\t\tconst splitPath = this.props.history.location.pathname.split(\"/\");\n\t\tconst id = splitPath[splitPath.length - 1];\n\t\tconst token = Cookie.get(\"token\");\n\n\t\tconst self = this;\n\t\tthis.setState({ loading: true });\n\t\tTemplateService.get(\n\t\t\ttoken,\n\t\t\tid,\n\t\t\tasync function (template) {\n\t\t\t\tself.setState({\n\t\t\t\t\tid: id,\n\t\t\t\t\ttemplate: template,\n\t\t\t\t\tradioValue: template.previewType,\n\t\t\t\t\tloading: false,\n\t\t\t\t\terror: false\n\t\t\t\t});\n\t\t\t},\n\t\t\tfunction (err) {\n\t\t\t\tself.setState({ error: err });\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t);\n\t}\n\n\t// volver a listado\n\tonBack = () => {\n\t\tif (this.state.loading && this.state.error) {\n\t\t\tthis.setState({ loading: false, error: false });\n\t\t} else {\n\t\t\tthis.props.history.push(Constants.ROUTES.TEMPLATES);\n\t\t}\n\t};\n\n\t// agregar campo al template con la info proveniente del dialogo\n\tcreateField = (data, type) => {\n\t\tif (this.templateFieldAddDialog) this.templateFieldAddDialog.close();\n\n\t\tthis.state.template.data[type].push(data);\n\t\tthis.setState({ template: this.state.template });\n\t};\n\n\t// marcar campo como requerido / no requerido\n\ttoggleRequired = (data, type) => {\n\t\tconst dataElem = this.state.template.data[type].find(dataElem => {\n\t\t\treturn dataElem.name === data.name;\n\t\t});\n\n\t\tif (dataElem && !dataElem.mandatory) {\n\t\t\tdataElem.required = !dataElem.required;\n\t\t\tthis.setState({ template: this.state.template });\n\t\t}\n\t};\n\n\t// cambiar valor por defecto del campo\n\tsetDefaultValue = (data, defaultValue, type) => {\n\t\tconst dataElem = this.state.template.data[type].find(dataElem => {\n\t\t\treturn dataElem.name === data.name;\n\t\t});\n\n\t\tif (dataElem) {\n\t\t\tdataElem.defaultValue = defaultValue;\n\t\t\tthis.setState({ template: this.state.template });\n\t\t}\n\t};\n\n\t// seleccionar los campos a mostrarse por defecto en el certificado\n\tonPreviewFieldsSelected = event => {\n\t\tconst template = this.state.template;\n\t\ttemplate.previewData = event.target.value;\n\t\ttemplate.previewType = this.state.radioValue;\n\t\tthis.setState({ template: template });\n\t};\n\n\t// borrar campo\n\tdeleteField = (data, type) => {\n\t\tconst template = this.state.template;\n\t\ttemplate.data[type] = template.data[type].filter(dataElem => {\n\t\t\treturn dataElem.name !== data.name;\n\t\t});\n\t\ttemplate.previewData = template.previewData.filter(prevData => {\n\t\t\treturn prevData !== data.name;\n\t\t});\n\t\tthis.setState({ template: template });\n\t};\n\n\t// guardar template y volver a listado de templates\n\tonSave = () => {\n\t\tconst token = Cookie.get(\"token\");\n\t\tconst template = this.state.template;\n\t\ttemplate.previewType = this.state.radioValue;\n\t\tconst self = this;\n\n\t\tself.setState({ loading: true });\n\t\tTemplateService.save(\n\t\t\ttoken,\n\t\t\ttemplate,\n\t\t\tasync function (_) {\n\t\t\t\tself.setState({ loading: false, error: false });\n\t\t\t\tself.props.history.push(Constants.ROUTES.LIST);\n\t\t\t\t// self.props.history.push(Constants.ROUTES.TEMPLATES);\n\t\t\t},\n\t\t\tfunction (err) {\n\t\t\t\tself.setState({ error: err });\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t);\n\t};\n\n\t// mostrar pantalla de edicion de modelos de certificados\n\trender() {\n\t\tif (!Cookie.get(\"token\")) {\n\t\t\treturn <Redirect to={Constants.ROUTES.LOGIN} />;\n\t\t}\n\t\tconst loading = this.state.loading;\n\t\treturn (\n\t\t\t<div className={loading ? \"Loading Template\" : \"Template\"}>\n\t\t\t\t{Spinner.render(loading)}\n\t\t\t\t{this.renderDialog()}\n\t\t\t\t{!loading && this.renderTemplateType()}\n\t\t\t\t{!loading && this.renderTemplateCategory()}\n\t\t\t\t{!loading && this.renderTemplate()}\n\t\t\t\t{this.renderButtons()}\n\t\t\t\t<div className=\"errMsg\">{this.state.error && this.state.error.message}</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t// mostrar dialogo para agregar o eliminar campos del modelo\n\trenderDialog = () => {\n\t\treturn (\n\t\t\t<TemplateFieldAddDialog\n\t\t\t\tonRef={ref => (this.templateFieldAddDialog = ref)}\n\t\t\t\ttitle={Messages.EDIT.DIALOG.FIELD.TITLE}\n\t\t\t\tonAccept={this.createField}\n\t\t\t/>\n\t\t);\n\t};\n\n\t// mostrar controles para definir la categoria del modelo\n\t// (como se categorizara al certificado en la app Android)\n\trenderTemplateCategory = () => {\n\t\tconst template = this.state.template;\n\t\tconst categories = Constants.TEMPLATES.CATEGORIES;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h2 className=\"DataTitle\">{Messages.EDIT.DATA.CATEGORIES}</h2>\n\t\t\t\t<Select\n\t\t\t\t\tclassName=\"CategoriesPicker\"\n\t\t\t\t\tdisplayEmpty\n\t\t\t\t\tvalue={template.category ? template.category : \"\"}\n\t\t\t\t\tonChange={event => {\n\t\t\t\t\t\ttemplate.category = event.target.value;\n\t\t\t\t\t\tthis.setState({ template: template });\n\t\t\t\t\t}}\n\t\t\t\t\trenderValue={selected => selected}\n\t\t\t\t>\n\t\t\t\t\t{categories.map((elem, key) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<MenuItem key={\"Category-\" + key} value={elem}>\n\t\t\t\t\t\t\t\t<ListItemText primary={elem} />\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</Select>\n\t\t\t</div>\n\t\t);\n\t};\n\n\t// mostrar controles para definir como se mostrara la credencial en la app Android\n\t// (cuantos campos se mostraran por defecto y cuales son esos campos)\n\trenderTemplateType = () => {\n\t\tconst template = this.state.template;\n\t\tconst templateElements = template.data.cert\n\t\t\t.concat(template.data.others)\n\t\t\t.concat(template.data.participant)\n\t\t\t.filter(elemData => elemData.required)\n\t\t\t.map(elementData => elementData.name);\n\n\t\tconst radioValue = this.state.radioValue;\n\t\tconst missing = Constants.TEMPLATES.PREVIEW_ELEMS_LENGTH[radioValue] - this.state.template.previewData.length;\n\n\t\treturn (\n\t\t\t<div className=\"Template-Type\">\n\t\t\t\t<h2 className=\"DataTitle\">{Messages.EDIT.DATA.PREVIEW}</h2>\n\n\t\t\t\t<RadioGroup\n\t\t\t\t\tclassName=\"PreviewFieldTypePicker\"\n\t\t\t\t\taria-label=\"gender\"\n\t\t\t\t\tname=\"gender1\"\n\t\t\t\t\tvalue={radioValue}\n\t\t\t\t\tonChange={event => {\n\t\t\t\t\t\tthis.setState({ radioValue: event.target.value });\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"PreviewFieldItem\">\n\t\t\t\t\t\t<FormControlLabel value=\"1\" checked={radioValue === \"1\"} control={<Radio />} />\n\t\t\t\t\t\t<img src={require(\"./Preview/1.png\")} className=\"PreviewFieldTypeImage\" alt=\"type 1\" />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"PreviewFieldItem\">\n\t\t\t\t\t\t<FormControlLabel value=\"2\" checked={radioValue === \"2\"} control={<Radio />} />\n\t\t\t\t\t\t<img src={require(\"./Preview/2.png\")} className=\"PreviewFieldTypeImage\" alt=\"type 2\" />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"PreviewFieldItem\">\n\t\t\t\t\t\t<FormControlLabel value=\"3\" checked={radioValue === \"3\"} control={<Radio />} />\n\t\t\t\t\t\t<img src={require(\"./Preview/3.png\")} className=\"PreviewFieldTypeImage\" alt=\"type 3\" />\n\t\t\t\t\t</div>\n\t\t\t\t</RadioGroup>\n\n\t\t\t\t<Select\n\t\t\t\t\tclassName=\"PreviewFieldsSelect\"\n\t\t\t\t\tmultiple\n\t\t\t\t\tdisplayEmpty\n\t\t\t\t\tvalue={this.state.template.previewData}\n\t\t\t\t\tonChange={this.onPreviewFieldsSelected}\n\t\t\t\t\trenderValue={selected => selected.join(\", \")}\n\t\t\t\t>\n\t\t\t\t\t{templateElements.map((elem, key) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<MenuItem key={\"PreviewFields-\" + key} value={elem}>\n\t\t\t\t\t\t\t\t<Checkbox checked={this.state.template.previewData.indexOf(elem) > -1} />\n\t\t\t\t\t\t\t\t<ListItemText primary={elem} />\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</Select>\n\n\t\t\t\t{missing > 0 && <div>Seleccione {missing} mas</div>}\n\t\t\t\t{missing < 0 && <div>Agrego de mas, quite {-1 * missing}</div>}\n\t\t\t</div>\n\t\t);\n\t};\n\n\t// mostrar la lista de campos con sus valores por defecto categorizados en:\n\t// Datos del certificado\n\t// Datos del participante\n\t// Otros datos\n\trenderTemplate = () => {\n\t\tconst template = this.state.template;\n\t\treturn (\n\t\t\t<div className=\"Template-Content\">\n\t\t\t\t{this.renderSection(Messages.EDIT.DATA.CERT, template.data.cert, Constants.TEMPLATES.DATA_TYPES.CERT)}\n\t\t\t\t{this.renderSection(\n\t\t\t\t\tMessages.EDIT.DATA.PART,\n\t\t\t\t\ttemplate.data.participant,\n\t\t\t\t\tConstants.TEMPLATES.DATA_TYPES.PARTICIPANT\n\t\t\t\t)}\n\t\t\t\t{this.renderSection(Messages.EDIT.DATA.OTHER, template.data.others, Constants.TEMPLATES.DATA_TYPES.OTHERS)}\n\t\t\t</div>\n\t\t);\n\t};\n\n\t// mostrar la lista de campos con sus valores por defecto para una categoria en particular\n\trenderSection = (title, data, type) => {\n\t\treturn (\n\t\t\t<div className=\"TemplateSectionContent\">\n\t\t\t\t<h2 className=\"DataTitle\">{title}</h2>\n\t\t\t\t{data.map((dataElem, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className=\"Data\" key={\"template-elem-\" + index}>\n\t\t\t\t\t\t\t<div className=\"DataName\">{dataElem.name}</div>\n\t\t\t\t\t\t\t<div className=\"DataElem\">\n\t\t\t\t\t\t\t\t{DataRenderer.renderData(dataElem, type, true, this.setDefaultValue, true)}\n\t\t\t\t\t\t\t\t{DataRenderer.renderRequired(dataElem, type, this.toggleRequired, true)}\n\t\t\t\t\t\t\t\t{DataRenderer.renderDelete(dataElem, type, this.deleteField, true)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t\t{this.renderSectionButtons(type)}\n\t\t\t</div>\n\t\t);\n\t};\n\n\t// mostrar controles para agregar un campo nuevo en la seccion elegida\n\t// (Datos del certificado, Datos del participante, Otros datos)\n\trenderSectionButtons = type => {\n\t\treturn (\n\t\t\t<div className=\"SectionButtons\">\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"AddButton\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tif (this.templateFieldAddDialog) this.templateFieldAddDialog.open(type);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"AddButton\">\n\t\t\t\t\t\t<MaterialIcon icon={Constants.TEMPLATES.ICONS.ADD_BUTTON} />\n\t\t\t\t\t\t<div className=\"AddButtonText\">{Messages.EDIT.BUTTONS.CREATE}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t};\n\n\t// mostrar botones al pie de la tabla\n\trenderButtons = () => {\n\t\treturn (\n\t\t\t<div className=\"TemplateButtons\">\n\t\t\t\t<button className=\"SaveButton\" onClick={this.onSave}>\n\t\t\t\t\t{Messages.EDIT.BUTTONS.SAVE}\n\t\t\t\t</button>\n\t\t\t\t<button className=\"BackButton\" onClick={this.onBack}>\n\t\t\t\t\t{Messages.EDIT.BUTTONS.BACK}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t};\n}\n\nexport default withRouter(Template);\n","import React, { Component } from \"react\";\nimport { withRouter, Redirect } from \"react-router\";\nimport \"./Certificate.scss\";\n\nimport CertificateService from \"../../../services/CertificateService\";\nimport TemplateService from \"../../../services/TemplateService\";\nimport ParticipantService from \"../../../services/ParticipantService\";\n\nimport ReactFileReader from \"react-file-reader\";\nimport DataRenderer from \"../../utils/DataRenderer\";\n\nimport Cookie from \"js-cookie\";\n\nimport Constants from \"../../../constants/Constants\";\nimport Messages from \"../../../constants/Messages\";\n\nimport Spinner from \"../../utils/Spinner\";\nimport Select from \"@material-ui/core/Select\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nimport QrDialog from \"../../utils/dialogs/QrDialog\";\n\nlet interval;\nclass Certificate extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tloading: false,\n\t\t\taction: \"viewing\"\n\t\t};\n\t}\n\n\t// parar pooling de participante (espera respuestas del qr)\n\tcomponentWillUnmount() {\n\t\tif (interval) {\n\t\t\tclearInterval(interval);\n\t\t}\n\t}\n\n\t// cargar templates, certificado, etc\n\tcomponentDidMount() {\n\t\tconst splitPath = this.props.history.location.pathname.split(\"/\");\n\t\tconst id = splitPath[splitPath.length - 1];\n\t\tconst token = Cookie.get(\"token\");\n\n\t\tconst self = this;\n\t\t(async () => {\n\t\t\tself.setState({ loading: true });\n\n\t\t\ttry {\n\t\t\t\tawait self.getTemplates(token);\n\t\t\t\tif (id) {\n\t\t\t\t\tawait self.getCert(token, id);\n\t\t\t\t\tawait self.getTemplate(token);\n\t\t\t\t\tawait self.getParticipants();\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tself.setState({ error: err });\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\n\t\t\tself.setState({ loading: false });\n\t\t})();\n\t}\n\n\t// carga modelos de certificados\n\tgetTemplates = function (token) {\n\t\tconst self = this;\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tTemplateService.getAll(\n\t\t\t\ttoken,\n\t\t\t\tfunction (templates) {\n\t\t\t\t\tself.setState({ templates: templates });\n\t\t\t\t\tresolve();\n\t\t\t\t},\n\t\t\t\tfunction (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t};\n\n\t// carga certificado\n\tgetCert = function (token, id) {\n\t\tconst self = this;\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tCertificateService.get(\n\t\t\t\ttoken,\n\t\t\t\tid,\n\t\t\t\tfunction (cert) {\n\t\t\t\t\tself.setState({\n\t\t\t\t\t\tcert: cert,\n\t\t\t\t\t\terror: false\n\t\t\t\t\t});\n\t\t\t\t\tresolve();\n\t\t\t\t},\n\t\t\t\tfunction (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t};\n\n\t// carga modelo de certificado\n\tgetTemplate = function (token) {\n\t\tconst self = this;\n\n\t\t// si el cert fue emitido, no puedo editarlo\n\t\tconst action = this.state.cert.emmitedOn ? \"viewing\" : \"editing\";\n\t\tconst selectedTemplate = this.state.templates.find(template => template._id === this.state.cert.templateId);\n\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tTemplateService.get(\n\t\t\t\ttoken,\n\t\t\t\tselectedTemplate._id,\n\t\t\t\tfunction (template) {\n\t\t\t\t\tself.setState({\n\t\t\t\t\t\taction: action,\n\t\t\t\t\t\tselectedTemplate: selectedTemplate,\n\t\t\t\t\t\ttemplate: template,\n\t\t\t\t\t\terror: false\n\t\t\t\t\t});\n\t\t\t\t\tresolve();\n\t\t\t\t},\n\t\t\t\tfunction (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t};\n\n\t// carga lista de participantes de los que se tiene info para el modelo de certificado\n\tgetParticipants = function () {\n\t\tconst self = this;\n\t\tconst token = Cookie.get(\"token\");\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tParticipantService.getAll(\n\t\t\t\ttoken,\n\t\t\t\tself.state.template._id,\n\t\t\t\tfunction (participants) {\n\t\t\t\t\tself.setState({\n\t\t\t\t\t\tparticipants: participants,\n\t\t\t\t\t\terror: false\n\t\t\t\t\t});\n\t\t\t\t\tresolve();\n\t\t\t\t},\n\t\t\t\tfunction (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t};\n\n\t// generar certificado a partir del template seleccionado en el combo\n\tcertFromTemplate = template => {\n\t\tconst data = {\n\t\t\tcert: this.certDataFromTemplate(template, \"cert\"),\n\t\t\tparticipant: [this.certDataFromTemplate(template, \"participant\")],\n\t\t\tothers: this.certDataFromTemplate(template, \"others\")\n\t\t};\n\n\t\treturn {\n\t\t\ttemplateId: template._id,\n\t\t\tsplit: false,\n\t\t\tmicroCredentials: [],\n\t\t\tdata: data\n\t\t};\n\t};\n\n\t// mapear data del certificado a partir del modelo\n\tcertDataFromTemplate = (template, field) => {\n\t\treturn template.data[field].map(data => {\n\t\t\treturn {\n\t\t\t\tname: data.name,\n\t\t\t\ttype: data.type,\n\t\t\t\toptions: data.options,\n\t\t\t\tvalue: data.defaultValue ? data.defaultValue : \"\",\n\t\t\t\trequired: data.required,\n\t\t\t\tmandatory: data.mandatory\n\t\t\t};\n\t\t});\n\t};\n\n\t// respuesta del qr -> actualizar participante con los datos recibidos\n\tonDataReceived = parts => {\n\t\tthis.onParticipantsAdd(parts);\n\t};\n\n\t// agregar info de participante con los datos por defecto del template\n\taddParticipant = () => {\n\t\tconst participant = this.state.cert.data.participant;\n\t\tparticipant.push(this.certDataFromTemplate(this.state.template, \"participant\"));\n\t\tthis.setState({ cert: this.state.cert });\n\t};\n\n\t// genera csv de ejemplo para carga por csv\n\tcreateSampleCsv = () => {\n\t\tconst getSample = function (dataElem) {\n\t\t\tswitch (dataElem.type) {\n\t\t\t\tcase Constants.TEMPLATES.TYPES.BOOLEAN:\n\t\t\t\t\treturn \"true/false\";\n\t\t\t\tcase Constants.TEMPLATES.TYPES.CHECKBOX:\n\t\t\t\t\tlet result = \"\";\n\t\t\t\t\tdataElem.options.forEach(elem => (result += elem + \"/\"));\n\t\t\t\t\tresult = result.substring(0, result.length - 1);\n\t\t\t\t\treturn result;\n\t\t\t\tcase Constants.TEMPLATES.TYPES.DATE:\n\t\t\t\t\treturn \"ej: 10/12/2020\";\n\t\t\t\tcase Constants.TEMPLATES.TYPES.NUMBER:\n\t\t\t\t\treturn \"un número\";\n\t\t\t\tcase Constants.TEMPLATES.TYPES.TEXT:\n\t\t\t\t\tif (dataElem.name === Constants.TEMPLATES.MANDATORY_DATA.DID)\n\t\t\t\t\t\treturn \"ej: did:ethr:0x5f6ed832a5fd0f0a58135f9695ea40af8666db31\";\n\t\t\t\t\treturn \"un texto\";\n\t\t\t\tcase Constants.TEMPLATES.TYPES.PARAGRAPH:\n\t\t\t\t\treturn \"un parrafo\";\n\t\t\t\tdefault:\n\t\t\t\t\treturn \"\";\n\t\t\t}\n\t\t};\n\n\t\tlet csv = \"\";\n\t\tlet firstLine = \"\";\n\n\t\tconst certData = this.state.cert.data.cert;\n\t\tfor (let key of Object.keys(certData)) {\n\t\t\tif (!certData[key].mandatory) {\n\t\t\t\tcsv += certData[key].name + \" (\" + getSample(certData[key]) + \")\";\n\t\t\t\tcsv += certData[key].required ? \"*,\" : \",\";\n\t\t\t\tfirstLine += \",\";\n\t\t\t}\n\t\t}\n\n\t\tconst othersData = this.state.cert.data.others;\n\t\tif (othersData) {\n\t\t\tfor (let key of Object.keys(othersData)) {\n\t\t\t\tif (!othersData[key].mandatory) {\n\t\t\t\t\tcsv += othersData[key].name + \" (\" + getSample(othersData[key]) + \")\";\n\t\t\t\t\tcsv += othersData[key].required ? \"*,\" : \",\";\n\t\t\t\t\tfirstLine += \",\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst partData = this.state.cert.data.participant[0];\n\t\t// for (let i = 0; i < 3; i++) {\n\t\tfor (let key of Object.keys(partData)) {\n\t\t\tcsv += partData[key].name + \" (\" + getSample(partData[key]) + \")\";\n\t\t\tcsv += partData[key].required ? \"*,\" : \",\";\n\t\t\tfirstLine += \",\";\n\t\t}\n\t\t//}\n\n\t\t//csv = csv.substring(0, csv.length - 1);\n\t\tfirstLine = firstLine.substring(0, firstLine.length - 1);\n\t\tcsv += \"\\n\" + firstLine;\n\n\t\tconst element = document.createElement(\"a\");\n\t\tconst file = new Blob([csv], { type: \"text/plain\" });\n\t\telement.href = URL.createObjectURL(file);\n\t\telement.download = \"sample.csv\";\n\t\tdocument.body.appendChild(element);\n\t\telement.click();\n\t};\n\n\t// validar que el valor sea un did\n\tvalidateDID = function (value) {\n\t\tconst regex = /did:ethr:0x[0-9A-Fa-f]{40}/;\n\t\tif (!value.match(regex)) {\n\t\t\tif (!this.state.error) this.setState({ error: { message: Constants.CERTIFICATES.ERR.INVALID_DID } });\n\t\t} else {\n\t\t\tif (this.state.error) this.setState({ error: undefined });\n\t\t}\n\t};\n\n\t// agregar info de participante con los datos provenientes de un csv\n\t// (este csv tiene que tener los datos ordenados de la misma forma que el template)\n\tloadCertFromCsv = files => {\n\t\t// retorna true si el dato es valido (valida segun el tipo de dato requerido en el modelo de certificado)\n\t\tlet validateValueMatchesType = function (dataElem, value) {\n\t\t\tswitch (dataElem.type) {\n\t\t\t\tcase Constants.TEMPLATES.TYPES.BOOLEAN:\n\t\t\t\t\tdataElem.value = value;\n\t\t\t\t\tif (value === \"TRUE\") dataElem.value = true;\n\t\t\t\t\tif (value === \"FALSE\") dataElem.value = true;\n\t\t\t\t\treturn true;\n\t\t\t\tcase Constants.TEMPLATES.TYPES.CHECKBOX:\n\t\t\t\t\tconst res = dataElem.options.find(elem => elem === value + \"\");\n\t\t\t\t\tif (res) {\n\t\t\t\t\t\tdataElem.value = value;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\tcase Constants.TEMPLATES.TYPES.DATE:\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst dateParts = value.split(\"/\");\n\t\t\t\t\t\tconst date = new Date(dateParts[2], dateParts[1] - 1, dateParts[0]);\n\t\t\t\t\t\tif (date instanceof Date && !isNaN(date)) {\n\t\t\t\t\t\t\tdataElem.value = date;\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\tcase Constants.TEMPLATES.TYPES.NUMBER:\n\t\t\t\t\tif (isNaN(value)) return false;\n\t\t\t\t\tdataElem.value = value;\n\t\t\t\t\treturn true;\n\t\t\t\tcase Constants.TEMPLATES.TYPES.PARAGRAPH:\n\t\t\t\t\tif (!value) return false;\n\t\t\t\t\tdataElem.value = value;\n\t\t\t\t\treturn true;\n\t\t\t\tcase Constants.TEMPLATES.TYPES.TEXT:\n\t\t\t\t\tif (!value) return false;\n\t\t\t\t\tdataElem.value = value;\n\t\t\t\t\treturn true;\n\t\t\t\tdefault:\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\n\t\t// asigna los datos a partir del csv, si en este hay datos validos que asignar\n\t\tlet assignElement = function (dataElem, data) {\n\t\t\tif (data === \"\" || data === \" \") {\n\t\t\t\tif (dataElem.required) return Constants.CERTIFICATES.ERR.CSV_REQUIRED_VALUE_MISSING(dataElem.name);\n\t\t\t} else {\n\t\t\t\tif (!validateValueMatchesType(dataElem, data)) {\n\t\t\t\t\treturn Constants.CERTIFICATES.ERR.CSV_REQUIRED_VALUE_INVALID(dataElem.name);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tconst self = this;\n\t\tvar reader = new FileReader();\n\t\t// iterar los campos del certificado y asignar los valores correspondiente del csv\n\t\treader.onload = function (e) {\n\t\t\tconst participant = [];\n\n\t\t\t// remove first line (headers)\n\t\t\tlet data = reader.result.split(/[\\r\\n]+/);\n\t\t\tdata.shift();\n\t\t\tdata = data.join(\",\");\n\n\t\t\t// get array from fields\n\t\t\tdata = data.split(\",\");\n\n\t\t\tconst certData = JSON.parse(JSON.stringify(self.state.cert.data.cert));\n\t\t\tconst othersData = JSON.parse(JSON.stringify(self.state.cert.data.others));\n\t\t\tconst partData = self.certDataFromTemplate(self.state.template, \"participant\");\n\n\t\t\tconst certDataKeys = Object.keys(certData);\n\t\t\tconst otherDataKeys = Object.keys(othersData);\n\t\t\tconst partDataKeys = Object.keys(partData);\n\n\t\t\tconst certDataCount = certDataKeys.length - 1;\n\t\t\tconst otherDataCount = otherDataKeys.length;\n\t\t\tconst partDataCount = partDataKeys.length;\n\n\t\t\tif (certDataCount + otherDataCount + partDataCount > data.length) {\n\t\t\t\tconst err = Constants.CERTIFICATES.ERR.CSV_MISSING_FIELDS();\n\t\t\t\treturn self.setState({ error: err });\n\t\t\t}\n\n\t\t\tlet index = 0;\n\n\t\t\tfor (let key of certDataKeys) {\n\t\t\t\tconst dataElem = certData[key];\n\t\t\t\tif (!dataElem.mandatory) {\n\t\t\t\t\tconst err = assignElement(dataElem, data[index]);\n\t\t\t\t\tif (err) return self.setState({ error: err });\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (let key of otherDataKeys) {\n\t\t\t\tconst dataElem = othersData[key];\n\t\t\t\tif (!dataElem.mandatory) {\n\t\t\t\t\tconst err = assignElement(dataElem, data[index]);\n\t\t\t\t\tif (err) return self.setState({ error: err });\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdo {\n\t\t\t\tconst partData = self.certDataFromTemplate(self.state.template, \"participant\");\n\t\t\t\tfor (let dataElem of partData) {\n\t\t\t\t\tif (data.length > index) {\n\t\t\t\t\t\tconst err = assignElement(dataElem, data[index]);\n\t\t\t\t\t\tif (err) return self.setState({ error: err });\n\t\t\t\t\t\tif (dataElem.name === Constants.CERTIFICATES.MANDATORY_DATA.DID) self.validateDID(dataElem.value);\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tindex += certDataCount + otherDataCount;\n\t\t\t\tparticipant.push(partData);\n\t\t\t} while (data.length - index >= partDataCount);\n\n\t\t\tself.state.cert.data.cert = certData;\n\t\t\tself.state.cert.data.participant = participant;\n\t\t\tself.state.cert.data.others = othersData;\n\n\t\t\tself.setState({ cert: self.state.cert, error: undefined });\n\t\t};\n\t\treader.readAsText(files[0]);\n\t};\n\n\t// eliminar participante\n\tremoveParticipant = index => {\n\t\tif (this.state.cert.data.participant.length === 1) {\n\t\t\tconst partData = this.state.cert.data.participant[0];\n\t\t\tfor (let key of Object.keys(partData)) partData[key].value = \"\";\n\t\t} else {\n\t\t\tthis.state.cert.data.participant.splice(index, 1);\n\t\t}\n\n\t\tfor (let partData of this.state.cert.data.participant) {\n\t\t\tthis.validateDID(partData[0].value);\n\t\t\tif (this.state.error) break;\n\t\t}\n\t\tthis.setState({ cert: this.state.cert });\n\t};\n\n\t// borrar data local y generar nuevo cert a partir del template\n\ttemplateSelected = selectedTemplate => {\n\t\tconst token = Cookie.get(\"token\");\n\n\t\tconst self = this;\n\t\tself.setState({ loading: true });\n\t\t// obtener template\n\t\tTemplateService.get(\n\t\t\ttoken,\n\t\t\tselectedTemplate._id,\n\t\t\tfunction (template) {\n\t\t\t\tParticipantService.getAll(\n\t\t\t\t\ttoken,\n\t\t\t\t\ttemplate._id,\n\t\t\t\t\tfunction (participants) {\n\t\t\t\t\t\tself.setState({\n\t\t\t\t\t\t\tselectedTemplate: selectedTemplate,\n\t\t\t\t\t\t\tparticipants: participants,\n\t\t\t\t\t\t\ttemplate: template,\n\t\t\t\t\t\t\terror: false,\n\t\t\t\t\t\t\tcert: self.certFromTemplate(template),\n\t\t\t\t\t\t\tloading: false,\n\t\t\t\t\t\t\taction: \"creating\"\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tfunction (err) {\n\t\t\t\t\t\tself.setState({ error: err });\n\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t},\n\t\t\tfunction (err) {\n\t\t\t\tself.setState({ error: err });\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t);\n\t};\n\n\t// busca la data del participante en issuer-back y lo carga en la posicion indicada dentro de la lista de participantes\n\tparticipantSelected(did, position) {\n\t\tconst self = this;\n\t\tconst token = Cookie.get(\"token\");\n\t\tself.setState({ loading: true });\n\n\t\tParticipantService.get(\n\t\t\ttoken,\n\t\t\tdid,\n\t\t\tfunction (participant) {\n\t\t\t\tconst partToUpdate = self.state.cert.data.participant[position];\n\t\t\t\tif (participant.data) {\n\t\t\t\t\tparticipant.data.forEach(dataElem => {\n\t\t\t\t\t\tconst dataToUpdate = partToUpdate.find(data => {\n\t\t\t\t\t\t\tconst name = data.name.toLowerCase();\n\t\t\t\t\t\t\tconst mappedName = Constants.TEMPLATES.TYPE_MAPPING[data.name];\n\t\t\t\t\t\t\tconst elemName = dataElem.name.toLowerCase();\n\t\t\t\t\t\t\treturn name === elemName || (mappedName && mappedName.toLowerCase() === elemName);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tif (dataToUpdate) dataToUpdate.value = dataElem.value;\n\t\t\t\t\t});\n\n\t\t\t\t\tconst didDataToUpdate = partToUpdate.find(data => data.name.toLowerCase() === \"did\");\n\t\t\t\t\tif (didDataToUpdate) didDataToUpdate.value = participant.did;\n\t\t\t\t}\n\n\t\t\t\tself.setState({\n\t\t\t\t\tparticipants: self.state.participants,\n\t\t\t\t\terror: false,\n\t\t\t\t\taction: self.state.action,\n\t\t\t\t\tloading: false\n\t\t\t\t});\n\t\t\t},\n\t\t\tfunction (err) {\n\t\t\t\tself.setState({ error: err });\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t);\n\t}\n\n\t// agrega todos los participantes en 'parts' a la lista de participantes\n\tonParticipantsAdd = parts => {\n\t\tconst len = this.state.cert.data.participant.length;\n\t\tlet pos = 0;\n\n\t\tif (parts.length === 0) return;\n\n\t\tfor (let newPart of parts) {\n\t\t\tif (pos >= len) this.addParticipant();\n\t\t\tthis.participantSelected(newPart.did, pos);\n\t\t\tpos++;\n\t\t}\n\n\t\tif (len >= pos) this.state.cert.data.participant.splice(pos, len - pos);\n\t};\n\n\t// guardar cert y volver a listado de certificados\n\tonSave = () => {\n\t\tconst token = Cookie.get(\"token\");\n\t\tconst cert = this.state.cert;\n\t\tconst self = this;\n\n\t\tself.setState({ loading: true });\n\t\tCertificateService.save(\n\t\t\ttoken,\n\t\t\tcert,\n\t\t\tasync function (_) {\n\t\t\t\tself.setState({ loading: false, error: false });\n\t\t\t\tself.props.history.push(Constants.ROUTES.CERTIFICATES);\n\t\t\t},\n\t\t\tfunction (err) {\n\t\t\t\tself.setState({ error: err });\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t);\n\t};\n\n\t// agrega microcredencial a la lista de microcredenciales\n\taddMicroCredential = () => {\n\t\tconst cert = this.state.cert;\n\t\tcert.microCredentials.push({ title: \"\", names: [] });\n\t\tthis.setState({ cert: cert });\n\t};\n\n\t// borra microcredencial de la lista de microcredenciales\n\tremoveMicroCredential = key => {\n\t\tconst cert = this.state.cert;\n\t\tif (cert.microCredentials.length > 1) {\n\t\t\tcert.microCredentials.splice(key, 1);\n\t\t\tthis.setState({ cert: cert });\n\t\t}\n\t};\n\n\t// actualizar campos seleccionados de la microcredencial\n\tmicrocredFieldsSelected = (key, event) => {\n\t\tconst cert = this.state.cert;\n\t\tcert.microCredentials[key].names = event.target.value;\n\t\tthis.setState({ cert: cert });\n\t};\n\n\t// actualizar nombre de la microcredencial\n\tmicrocredNameChanged = (key, event) => {\n\t\tconst cert = this.state.cert;\n\t\tcert.microCredentials[key].title = event.target.value;\n\t\tthis.setState({ cert: cert });\n\t};\n\n\t// habilita o deshabilita microcredenciales\n\tsplitChanged = value => {\n\t\tconst cert = this.state.cert;\n\t\tcert.split = value;\n\t\tif (value === \"true\") {\n\t\t\tcert.microCredentials = [{ title: \"\", names: [] }];\n\t\t} else {\n\t\t\tcert.microCredentials = [];\n\t\t}\n\t\tthis.setState({ cert: cert });\n\t};\n\n\t// volver a listado de certificados\n\tonBack = () => {\n\t\tif (this.state.loading && this.state.error) {\n\t\t\tthis.setState({ loading: false, error: false });\n\t\t} else {\n\t\t\tthis.props.history.push(Constants.ROUTES.CERTIFICATES);\n\t\t}\n\t};\n\n\tupdateErrorDelayed = error => {\n\t\tconst self = this;\n\t\t// delay setState in case view is still rendering\n\t\tsetTimeout(\n\t\t\t() => {\n\t\t\t\tif (!error || !this.state.error) {\n\t\t\t\t\tself.setState({ error: error });\n\t\t\t\t}\n\t\t\t},\n\t\t\t500\n\t\t);\n\t};\n\n\t// si el boton de guardar esta deshabilitado\n\t// (algun campo obligatorio sin llenar o el did tiene un formato incorrecto)\n\tsaveDisabled = () => {\n\t\tif (!this.state.cert) return true;\n\n\t\tconst did = this.state.cert.data.participant[0][0].value;\n\t\tconst regex = /^did:ethr:0x[0-9A-Za-z]{40}$/;\n\t\tif (did && !did.match(regex)) {\n\t\t\tif (!this.state.error) this.updateErrorDelayed({ message: Constants.CERTIFICATES.ERR.INVALID_DID });\n\t\t\treturn true;\n\t\t} else {\n\t\t\tif (this.state.error && this.state.error.message === Constants.CERTIFICATES.ERR.INVALID_DID)\n\t\t\t\tthis.updateErrorDelayed(false);\n\t\t}\n\n\t\tconst cert = this.state.cert.data.cert;\n\t\tconst participant = this.state.cert.data.participant.flat();\n\t\tconst others = this.state.cert.data.others;\n\n\t\tconst all = cert.concat(participant).concat(others);\n\t\tfor (let index in all) {\n\t\t\tconst dataElem = all[index];\n\t\t\tif (dataElem.name === Constants.CERT_FIELD_MANDATORY.EXPIRATION_DATE) {\n\t\t\t\tif (new Date(dataElem.value) < new Date()) {\n\t\t\t\t\tif (!this.state.error) {\n\t\t\t\t\t\tthis.updateErrorDelayed(Constants.CERTIFICATES.ERR.EXP_DATE_INVALID);\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\tif (this.state.error && this.state.error.message === Constants.CERTIFICATES.ERR.EXP_DATE_INVALID.message)\n\t\t\t\t\t\tthis.updateErrorDelayed(false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (dataElem.required && !dataElem.value) {\n\t\t\t\tif (!this.state.error) {\n\t\t\t\t\tthis.updateErrorDelayed(Constants.CERTIFICATES.ERR.MISSING_FIELD(dataElem.name));\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tthis.state.error &&\n\t\t\t\t\tthis.state.error.message === Constants.CERTIFICATES.ERR.MISSING_FIELD(dataElem.name).message\n\t\t\t\t) {\n\t\t\t\t\tthis.updateErrorDelayed(false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t};\n\n\t// obtener codigo qr a mostrar\n\tgenerateQrCode = () => {\n\t\tconst token = Cookie.get(\"token\");\n\t\tconst self = this;\n\t\tself.setState({ loading: true, qr: undefined });\n\n\t\tconst code = Math.random().toString(36).slice(-8);\n\n\t\t// obtener template\n\t\tTemplateService.getQrPetition(\n\t\t\ttoken,\n\t\t\tself.state.template._id,\n\t\t\tcode,\n\t\t\tfunction (qr) {\n\t\t\t\tself.setState({\n\t\t\t\t\trequestCode: code,\n\t\t\t\t\tqr: qr,\n\t\t\t\t\tloading: false,\n\t\t\t\t\tqrSet: false,\n\t\t\t\t\terror: false\n\t\t\t\t});\n\t\t\t},\n\t\t\tfunction (err) {\n\t\t\t\tself.setState({ error: err });\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t);\n\t};\n\n\t// mostrar pantalla de edicion de certificados\n\trender() {\n\t\tif (!Cookie.get(\"token\")) {\n\t\t\treturn <Redirect to={Constants.ROUTES.LOGIN} />;\n\t\t}\n\n\t\tconst loading = this.state.loading;\n\t\tconst error = this.state.error;\n\t\treturn (\n\t\t\t<div className={loading ? \"Certificate Loading\" : \"Certificate\"}>\n\t\t\t\t{Spinner.render(loading)}\n\t\t\t\t{this.renderTemplateSelector()}\n\t\t\t\t{!loading && this.renderCert()}\n\t\t\t\t{this.renderQrDialog()}\n\t\t\t\t{this.renderButtons()}\n\t\t\t\t<div className=\"errMsg\">{error && error.message}</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\t// muestra el dialogo de carga de participantes por qr o previamente almacenados en didi-issuer\n\trenderQrDialog = () => {\n\t\treturn (\n\t\t\t<QrDialog\n\t\t\t\tloading={this.state.loading}\n\t\t\t\tonRef={ref => (this.qrDialog = ref)}\n\t\t\t\ttitle={Messages.EDIT.DIALOG.QR.LOAD_BY_QR}\n\t\t\t\tonDataReceived={this.onDataReceived}\n\t\t\t\ttemplate={this.state.template}\n\t\t\t\ttemplates={this.state.templates}\n\t\t\t\tparticipants={this.state.participants}\n\t\t\t/>\n\t\t);\n\t};\n\n\t// muestra la seccion de seleccion de microcredenciales\n\trenderSplit = cert => {\n\t\tconst allData = cert.data.cert\n\t\t\t.concat(cert.data.participant[0])\n\t\t\t.concat(cert.data.others)\n\t\t\t.map(dataElem => dataElem.name);\n\n\t\treturn (\n\t\t\t<div className=\"Data\">\n\t\t\t\t<div className=\"DataName\">{Constants.CERTIFICATES.EDIT.SPLIT}</div>\n\t\t\t\t<div className=\"DataElem\">\n\t\t\t\t\t<Select\n\t\t\t\t\t\tclassName=\"DataInput Boolean\"\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\tvalue={cert.split ? cert.split : false}\n\t\t\t\t\t\tonChange={event => {\n\t\t\t\t\t\t\tthis.splitChanged(event.target.value);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuItem className=\"DataInput\" value={\"true\"}>\n\t\t\t\t\t\t\t{Constants.TEMPLATES.EDIT.BOOLEAN.TRUE}\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t<MenuItem className=\"DataInput\" value={\"false\"}>\n\t\t\t\t\t\t\t{Constants.TEMPLATES.EDIT.BOOLEAN.FALSE}\n\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t</Select>\n\t\t\t\t</div>\n\n\t\t\t\t{cert.split && cert.microCredentials && cert.microCredentials.length > 0 && (\n\t\t\t\t\t<div className=\"MicroCreds\">\n\t\t\t\t\t\t<div className=\"MicroCredsHeader\">\n\t\t\t\t\t\t\t<div className=\"DataName MicroCredsNameLabel\">{Messages.EDIT.DATA.MICRO_CRED_NAME}</div>\n\t\t\t\t\t\t\t<div className=\"DataName MicroCredsFieldsLabel\">{Messages.EDIT.DATA.MICRO_CRED_FIELDS}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{cert.microCredentials.map((microCred, key) => {\n\t\t\t\t\t\t\tlet picked = [];\n\t\t\t\t\t\t\tfor (let i = 0; i < cert.microCredentials.length; i++) {\n\t\t\t\t\t\t\t\tif (i !== key) picked = picked.concat(cert.microCredentials[i].names);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst data = allData.filter(microCredName => picked.indexOf(microCredName) < 0);\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div className=\"DataElem\" key={\"Microcred-\" + key}>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"DataInput MicroCredFieldName\"\n\t\t\t\t\t\t\t\t\t\tvalue={microCred.title}\n\t\t\t\t\t\t\t\t\t\tonChange={event => {\n\t\t\t\t\t\t\t\t\t\t\tthis.microcredNameChanged(key, event);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\t\t\tclassName=\"MicroCredFieldsSelect\"\n\t\t\t\t\t\t\t\t\t\tmultiple\n\t\t\t\t\t\t\t\t\t\tdisplayEmpty\n\t\t\t\t\t\t\t\t\t\tvalue={microCred.names}\n\t\t\t\t\t\t\t\t\t\tonChange={event => {\n\t\t\t\t\t\t\t\t\t\t\tthis.microcredFieldsSelected(key, event);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\trenderValue={selected => selected.join(\", \")}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{data.map((elem, key2) => {\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem key={\"MicroCred-\" + key + \"-Fields-\" + key2} value={elem}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox checked={microCred.names.indexOf(elem) > -1} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText primary={elem} />\n\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</Select>\n\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\ttitle={Messages.EDIT.BUTTONS.ADD_MICRO_CRED_LABEL}\n\t\t\t\t\t\t\t\t\t\tclassName=\"AddMicroCredential\"\n\t\t\t\t\t\t\t\t\t\tonClick={this.addMicroCredential}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{Messages.EDIT.BUTTONS.ADD_MICRO_CRED}\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\ttitle={Messages.EDIT.BUTTONS.REMOVE_MICRO_CRED_LABEL}\n\t\t\t\t\t\t\t\t\t\thidden={key === 0}\n\t\t\t\t\t\t\t\t\t\tclassName=\"RemoveMicroCredential\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tthis.removeMicroCredential(key);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{Messages.EDIT.BUTTONS.REMOVE_MICRO_CRED}\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t};\n\n\t// muestra la seccion de data del certificado\n\trenderCert = () => {\n\t\tconst cert = this.state.cert;\n\t\tif (!cert) return <div></div>;\n\n\t\tconst certData = cert.data.cert;\n\t\tconst othersData = cert.data.others;\n\t\tconst partData = cert.data.participant;\n\n\t\tconst viewing = this.state.action === \"viewing\";\n\n\t\treturn (\n\t\t\t<div className=\"CertSectionContent\">\n\t\t\t\t{!viewing && this.renderSplit(cert)}\n\t\t\t\t{this.renderSection(cert, certData, Constants.TEMPLATES.DATA_TYPES.CERT)}\n\t\t\t\t{this.renderSection(cert, othersData, Constants.TEMPLATES.DATA_TYPES.OTHERS)}\n\n\t\t\t\t{partData.map((data, key) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className=\"ParticipantContent\" key={\"part-\" + key}>\n\t\t\t\t\t\t\t<div hidden={key === 0}>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName=\"RemoveParticipantButton\"\n\t\t\t\t\t\t\t\t\thidden={this.state.viewing}\n\t\t\t\t\t\t\t\t\tonClick={() => this.removeParticipant(key)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{Messages.EDIT.BUTTONS.REMOVE_PARTICIPANTS}\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{this.renderSection(cert, data)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t\t<div>{\"(* requerido)\"}</div>\n\t\t\t</div>\n\t\t);\n\t};\n\n\t// muestra datos del certificado\n\trenderSection = (cert, data, type) => {\n\t\tconst self = this;\n\n\t\treturn (\n\t\t\t<div className=\"CertSectionContent\">\n\t\t\t\t{data.map((dataElem, index) => {\n\t\t\t\t\tif (dataElem.name === Constants.TEMPLATES.MANDATORY_DATA.NAME)\n\t\t\t\t\t\treturn <div key={\"template-elem-\" + index}></div>;\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className=\"Data\" key={\"template-elem-\" + index}>\n\t\t\t\t\t\t\t<div className=\"DataName\">{dataElem.name}</div>\n\t\t\t\t\t\t\t<div className=\"DataElem\">\n\t\t\t\t\t\t\t\t{DataRenderer.renderData(\n\t\t\t\t\t\t\t\t\tdataElem,\n\t\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\t\tthis.state.action === \"creating\" || this.state.action === \"editing\",\n\t\t\t\t\t\t\t\t\t(dataElem, value) => {\n\t\t\t\t\t\t\t\t\t\tdataElem.value = value;\n\t\t\t\t\t\t\t\t\t\tif (this.state.error) this.setState({ error: undefined });\n\t\t\t\t\t\t\t\t\t\tself.setState({ cert: cert });\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t<div className=\"RequiredMarker\">{dataElem.required ? \" * \" : \"   \"}</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t);\n\t};\n\n\t// mostrar selector de modelos de certificados\n\trenderTemplateSelector = () => {\n\t\tconst templates = this.state.templates;\n\t\tif (!templates) {\n\t\t\treturn <div></div>;\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"TemplateSelector\">\n\t\t\t\t<div className=\"DataName\">{Constants.CERTIFICATES.EDIT.TEMPLATE_SELECT_MESSAGE}</div>\n\n\t\t\t\t<Autocomplete\n\t\t\t\t\toptions={templates}\n\t\t\t\t\tgetOptionLabel={option => (option ? option.name : \"\")}\n\t\t\t\t\tvalue={this.state.selectedTemplate ? this.state.selectedTemplate : \"\"}\n\t\t\t\t\trenderInput={params => <TextField {...params} variant=\"standard\" label={\"\"} placeholder=\"\" fullWidth />}\n\t\t\t\t\tonChange={(_, value) => {\n\t\t\t\t\t\tthis.templateSelected(value);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t};\n\n\t// mostrar botones al pie de la tabla\n\trenderButtons = () => {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"AddParticipantButtons\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"CertButton AddParticipant\"\n\t\t\t\t\t\thidden={this.state.action === \"viewing\" || this.state.action === \"editing\"}\n\t\t\t\t\t\tonClick={this.addParticipant}\n\t\t\t\t\t>\n\t\t\t\t\t\t{Messages.EDIT.BUTTONS.ADD_PARTICIPANTS}\n\t\t\t\t\t</button>\n\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"CertButton LoadParticipant\"\n\t\t\t\t\t\thidden={this.state.action === \"viewing\" || this.state.action === \"editing\"}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tif (this.qrDialog) this.qrDialog.open();\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{Messages.EDIT.BUTTONS.LOAD_PARTICIPANTS}\n\t\t\t\t\t</button>\n\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"CertButton SampleCsv\"\n\t\t\t\t\t\thidden={this.state.action === \"viewing\" || this.state.action === \"editing\"}\n\t\t\t\t\t\tonClick={this.createSampleCsv}\n\t\t\t\t\t>\n\t\t\t\t\t\t{Messages.EDIT.BUTTONS.SAMPLE_CERT_FROM_CSV}\n\t\t\t\t\t</button>\n\n\t\t\t\t\t<ReactFileReader handleFiles={this.loadCertFromCsv} fileTypes={\".csv\"}>\n\t\t\t\t\t\t<button className=\"CertButton\" hidden={this.state.action === \"viewing\" || this.state.action === \"editing\"}>\n\t\t\t\t\t\t\t{Messages.EDIT.BUTTONS.LOAD_CERT_FROM_CSV}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</ReactFileReader>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"CertificateButtons\">\n\t\t\t\t\t<button\n\t\t\t\t\t\thidden={this.state.action === \"viewing\"}\n\t\t\t\t\t\tclassName=\"SaveButton\"\n\t\t\t\t\t\tdisabled={this.saveDisabled()}\n\t\t\t\t\t\tonClick={this.onSave}\n\t\t\t\t\t>\n\t\t\t\t\t\t{Messages.EDIT.BUTTONS.SAVE}\n\t\t\t\t\t</button>\n\t\t\t\t\t<button className=\"BackButton\" onClick={this.onBack}>\n\t\t\t\t\t\t{Messages.EDIT.BUTTONS.BACK}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t};\n}\n\nexport default withRouter(Certificate);\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.scss\";\n\nimport Constants from \"../../constants/Constants\";\nimport Login from \"../login/Login\";\nimport Main from \"./Main\";\nimport Template from \"../templates/edit/Template\";\nimport Certificate from \"../certificates/edit/Certificate\";\nimport Participants from \"../participants/Participants\";\nimport Delegates from \"../administrative/list/Delegates\";\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Router>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/\" component={Login} />\n\t\t\t\t\t\t<Route exact path={Constants.ROUTES.LOGIN} component={Login} />\n\t\t\t\t\t\t<Route exact path={Constants.ROUTES.LIST} component={Main} />\n\t\t\t\t\t\t<Route exact path={Constants.ROUTES.TEMPLATES} component={Main} />\n\t\t\t\t\t\t<Route exact path={Constants.ROUTES.CERTIFICATES} component={Main} />\n\t\t\t\t\t\t<Route path={Constants.ROUTES.EDIT_TEMPLATE} component={Template} />\n\t\t\t\t\t\t<Route path={Constants.ROUTES.EDIT_CERT} component={Certificate} />\n\t\t\t\t\t\t<Route path={Constants.ROUTES.QR_REQUEST} component={Participants} />\n\t\t\t\t\t\t<Route path={Constants.ROUTES.DELEGATES} component={Delegates} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</Router>\n\t\t\t\t<h6 className=\"Version\">v{Constants.VERSION}</h6>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/Index.scss\";\nimport App from \"./app/main/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nrequire('dotenv').config();\n\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<App />\n\t</BrowserRouter>,\n\tdocument.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n","module.exports = {\n\tLOGIN: {\n\t\tWELCOME: \"BIENVENIDO AL EMISOR DE CERTIFICADOS WEB\",\n\t\tBUTTONS: {\n\t\t\tENTER: \"Ingresar\"\n\t\t}\n\t},\n\tEDIT: {\n\t\tDATA: {\n\t\t\tPREVIEW: \"CAMPOS A PREVISUALIZAR\",\n\t\t\tCATEGORIES: \"CATEGORIA DEL CERTIFICADO\",\n\t\t\tCERT: \"DATOS DEL CERTIFICADO\",\n\t\t\tPART: \"DATOS DEL PARTICIPANTE\",\n\t\t\tOTHER: \"OTROS DATOS\",\n\n\t\t\tMICRO_CRED_NAME: \"NOMBRE DE LA MICRO\",\n\t\t\tMICRO_CRED_FIELDS: \"CAMPOS DE LA MICRO\"\n\t\t},\n\t\tDIALOG: {\n\t\t\tQR: {\n\t\t\t\tREQUEST_SENT: \"Pedido enviado\",\n\t\t\t\tLOAD_BY_QR: \"Cargar participante con código Qr\",\n\t\t\t\tLOADED_BY_QR: name => {\n\t\t\t\t\treturn \"Participante \" + name + \" cargado.\";\n\t\t\t\t},\n\t\t\t\tDIDS_TITLE: \"DIDS Cargados:\"\n\t\t\t},\n\t\t\tPARTICIPANT: {\n\t\t\t\tTITLE: \"Agregar Participante\",\n\t\t\t\tNAME: \"Participante\",\n\t\t\t\tCREATE: \"Agregar\",\n\t\t\t\tCLOSE: \"Cerrar\"\n\t\t\t},\n\t\t\tFIELD: {\n\t\t\t\tTITLE: \"Agregar Campo\",\n\t\t\t\tOPTION: \"Opcion\",\n\t\t\t\tREQUIRED: \"Requerido\",\n\t\t\t\tTYPES: \"Tipo\",\n\t\t\t\tNAME: \"Nombre\",\n\t\t\t\tCREATE: \"Crear\",\n\t\t\t\tCLOSE: \"Cerrar\"\n\t\t\t}\n\t\t},\n\t\tBUTTONS: {\n\t\t\tLOAD_DIDS_FROM_CSV: \"Cargar Dids por CSV\",\n\t\t\tADD_MICRO_CRED_LABEL: \"Agregar Micro\",\n\t\t\tREMOVE_MICRO_CRED_LABEL: \"Quitar Micro\",\n\t\t\tADD_MICRO_CRED: \"+\",\n\t\t\tREMOVE_MICRO_CRED: \"-\",\n\t\t\tREMOVE_PARTICIPANTS: \"X\",\n\t\t\tSAMPLE_PART_FROM_CSV: \"Generar CSV\",\n\t\t\tSAMPLE_CERT_FROM_CSV: \"Generar CSV\",\n\t\t\tLOAD_CERT_FROM_CSV: \"Cargar con CSV\",\n\t\t\tADD_PARTICIPANTS: \"Nuevo Participante\",\n\t\t\tLOAD_PARTICIPANTS: \"Cargar Participantes\",\n\t\t\tRENAME_ISSUER: \"Renombrar Emisor\",\n\t\t\tCREATE: \"NUEVO CAMPO\",\n\t\t\tSEND: \"Enviar\",\n\t\t\tSAVE: \"Guardar\",\n\t\t\tCANCEL: \"Cancelar\",\n\t\t\tCLOSE: \"Cerrar\",\n\t\t\tBACK: \"Volver\",\n\t\t\tEXIT: \"Salir\",\n\t\t\tREQUIRED: \"Requerido\",\n\t\t\tDELETE: \"Borrar\"\n\t\t}\n\t},\n\tLIST: {\n\t\tMENU: {\n\t\t\tTITLE: \"Menu\"\n\t\t},\n\t\tDIALOG: {\n\t\t\tISSUER_RENAME_TITLE: name => {\n\t\t\t\treturn \"Renombrar emisor (El nombre actual es '\" + name + \"'):\";\n\t\t\t},\n\t\t\tDELETE_CONFIRMATION: \"Esta seguro?\",\n\t\t\tDELETE_CERT_TITLE: \"Borrar Certificado\",\n\t\t\tDELETE_TEMPLATE_TITLE: \"Borrar Modelo\",\n\t\t\tDELETE_DELEGATE_TITLE: \"Borrar Delegado\",\n\t\t\tREVOKE_CERT_TITLE: \"Revocar Certificado\",\n\t\t\tREVOKE_CONFIRMATION: \"Esta seguro?\",\n\t\t\tREVOKE: \"Revocar\",\n\t\t\tDELETE: \"Borrar\",\n\t\t\tCREATE_DELEGATE_TITLE: \"Crear Delegado\",\n\t\t\tCREATE_TEMPLATE_TITLE: \"Crear Modelo\",\n\t\t\tDID: \"Did\",\n\t\t\tNAME: \"Nombre\",\n\t\t\tCREATE: \"Crear\",\n\t\t\tCANCEL: \"Cancelar\",\n\t\t\tCLOSE: \"Cerrar\"\n\t\t},\n\t\tTABLE: {\n\t\t\tDID: \"DID\",\n\t\t\tHAS_TEL: \"TELEFONO\",\n\t\t\tHAS_MAIL: \"MAIL\",\n\t\t\tHAS_PERSONAL: \"DATOS\",\n\t\t\tHAS_PERSONAL2: \"PERSONALES\",\n\t\t\tHAS_ADDRESS: \"DOMICILIO\",\n\t\t\tTEMPLATE: \"MODELO DE CERTIFICADO\",\n\t\t\tCERT: \"CERTIFICADO\",\n\t\t\tLAST_NAME: \"APELLIDO\",\n\t\t\tNAME: \"NOMBRE\",\n\t\t\tPREV: \"ANTERIOR\",\n\t\t\tNEXT: \"SIGUIENTE\",\n\t\t\tEMISSION_DATE: \"FECHA DE\",\n\t\t\tEMISSION_DATE2: \"EMISION\",\n\t\t\tSELECT: \"SELECCIONAR\",\n\t\t\tACTIONS: \"ACCIONES\"\n\t\t},\n\t\tBUTTONS: {\n\t\t\tCREATE_DELEGATE: \"CREAR DELEGADO\",\n\t\t\tDELEGATES: \"DELEGADOS\",\n\t\t\tTO_QR: \"REGISTRAR PARTICIPANTE\",\n\t\t\tTO_CERTIFICATES: \"CERTIFICADOS\",\n\t\t\tTO_TEMPLATES: \"TEMPLATES\",\n\t\t\tCREATE_TEMPLATE: \"CREAR MODELO DE CERTIFICADO\",\n\t\t\tCREATE_CERT: \"EMITIR CERTIFICADO\",\n\t\t\tEMMIT_SELECTED: \"Emitir Seleccionados\",\n\t\t\tEMMIT: \"Emitir\",\n\t\t\tVIEW: \"Ver\",\n\t\t\tEDIT: \"Editar\",\n\t\t\tDELETE: \"Borrar\",\n\t\t\tREVOKE: \"Revocar\",\n\t\t\tEXIT: \"Salir\"\n\t\t}\n\t},\n\tQR: {\n\t\tLOAD_SUCCESS: name => {\n\t\t\treturn \"USUARIO '\" + name + \"' CARGADO CON ÉXITO\";\n\t\t},\n\t\tDID_SELECT: \"DID\",\n\t\tCERTIFICATE_SELECT: \"CERTIFICADO A PEDIR\",\n\t\tTEMPLATE_SELECT: \"MODELO DE CERTIFICADO\",\n\t\tTEMPLATE_PART_SELECT_MESSAGE: \"Elige el usuario a el que se pediran los datos:\",\n\t\tTEMPLATE_SELECT_MESSAGE: \"Elige el modelo de certificado para el que se pediran los datos:\",\n\t\tQR_MESSAGE_CERT: \"O alternativamente ecanea el qr con la aplicacion para cargar los datos:\",\n\t\tQR_MESSAGE: \"Ecanear el qr con la aplicacion para cargar los datos requeridos por el modelo de certificado:\",\n\t\tQR_PD: \"Nota: Los datos obtenidos a partir del Qr seran accessibles solo para el modelo de certificado actual\",\n\t\tFULL_NAME: \"NOMBRE COMPLETO\",\n\t\tBUTTONS: {\n\t\t\tREQUEST: \"Pedir certificados\",\n\t\t\tQR_LOAD: \"Cargar por Qr\",\n\t\t\tGENERATE: \"Generar Qr\"\n\t\t}\n\t}\n};\n"],"sourceRoot":""}